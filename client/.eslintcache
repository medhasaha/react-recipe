[{"D:\\My Projects\\react-recipe\\client\\src\\index.js":"1","D:\\My Projects\\react-recipe\\client\\src\\Components\\App.js":"2","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeSearch.js":"3","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeDetails.js":"4","D:\\My Projects\\react-recipe\\client\\src\\ServiceClass.js":"5","D:\\My Projects\\react-recipe\\client\\src\\Components\\NavBar.js":"6","D:\\My Projects\\react-recipe\\client\\src\\Config.js":"7","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeCard.js":"8","D:\\My Projects\\react-recipe\\client\\src\\Components\\NutritionChart.js":"9","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipesHome.js":"10","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeHeader.js":"11","D:\\My Projects\\react-recipe\\client\\src\\Components\\LogIn.js":"12","D:\\My Projects\\react-recipe\\client\\src\\Components\\SignUp.js":"13","D:\\My Projects\\react-recipe\\client\\src\\Components\\Dashboard.js":"14","D:\\My Projects\\react-recipe\\client\\src\\Components\\theme.js":"15","D:\\My Projects\\react-recipe\\client\\src\\Components\\DrawerJSX.js":"16"},{"size":1178,"mtime":1613578021849,"results":"17","hashOfConfig":"18"},{"size":1297,"mtime":1612609207961,"results":"19","hashOfConfig":"18"},{"size":8909,"mtime":1613231499047,"results":"20","hashOfConfig":"18"},{"size":13501,"mtime":1613585318601,"results":"21","hashOfConfig":"18"},{"size":11943,"mtime":1613315766939,"results":"22","hashOfConfig":"18"},{"size":3850,"mtime":1613045969038,"results":"23","hashOfConfig":"18"},{"size":2190,"mtime":1613310838066,"results":"24","hashOfConfig":"18"},{"size":10771,"mtime":1613577726353,"results":"25","hashOfConfig":"18"},{"size":2276,"mtime":1612717342292,"results":"26","hashOfConfig":"18"},{"size":24916,"mtime":1613577854451,"results":"27","hashOfConfig":"18"},{"size":3292,"mtime":1612621953123,"results":"28","hashOfConfig":"18"},{"size":4956,"mtime":1613067522089,"results":"29","hashOfConfig":"18"},{"size":7645,"mtime":1612111163056,"results":"30","hashOfConfig":"18"},{"size":11797,"mtime":1613414380046,"results":"31","hashOfConfig":"18"},{"size":377,"mtime":1611859029298,"results":"32","hashOfConfig":"18"},{"size":9179,"mtime":1613577618569,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vme7p3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\My Projects\\react-recipe\\client\\src\\index.js",[],"D:\\My Projects\\react-recipe\\client\\src\\Components\\App.js",["77"],"import React from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport RecipesHome from './RecipesHome.js'\r\nimport RecipeSearch from './RecipeSearch.js'\r\nimport RecipeDetails from './RecipeDetails.js'\r\nimport LogIn from './LogIn.js'\r\nimport SignUp from './SignUp.js'\r\nimport Dashboard from './Dashboard.js'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div>\r\n          {/*<Route exact path=\"/\">\r\n            <Redirect to=\"/recipe/home\" />\r\n          </Route>*/}\r\n          <Route path=\"/recipe/home\" render={(props) => <RecipesHome {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/search-results\" render={(props) => <RecipeSearch {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/details/:id\" render={(props) => <RecipeDetails {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/login\" render={(props) => <LogIn {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/signup\" render={(props) => <SignUp {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/dashboard\" render={(props) => <Dashboard {...props} baseURL={\"/recipe\"} />} />\r\n        </div>\r\n      </BrowserRouter>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["78","79"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeSearch.js",["80","81"],"import React, {Component} from 'react';\r\nimport {recipeSearchAPI} from '../ServiceClass.js'\r\nimport RecipeCard from './RecipeCard.js';\r\nimport CONFIG from '../Config.js';\r\nimport NavBar from './NavBar.js';\r\nimport DrawerJSX from './DrawerJSX';\r\nimport queryString from \"query-string\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst sample = {\r\n\t\"results\": [\r\n\t{\r\n\t\"id\": 1161745,\r\n\t\"title\": \"Cake Balls\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1161745-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636754,\r\n\t\"title\": \"Cake De Naranja\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636754-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 1499853,\r\n\t\"title\": \"Cake Mix Donuts\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1499853-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636756,\r\n\t\"title\": \"Cake Batter Chocolates\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636756-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636768,\r\n\t\"title\": \"Cake with wine and olive oil\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636768-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 1025438,\r\n\t\"title\": \"Cake Mix Cookie Bars Brownie\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1025438-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636766,\r\n\t\"title\": \"Cake with lemon, rosewater and pistachios\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636766-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 641745,\r\n\t\"title\": \"Dump Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/641745-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 656444,\r\n\t\"title\": \"Plum Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/656444-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 654018,\r\n\t\"title\": \"Oreo Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/654018-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t}\r\n\t],\r\n\t\"offset\": 0,\r\n\t\"number\": 10,\r\n\t\"totalResults\": 453\r\n\t}\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.65)\",\r\n\t\t// backgroundColor: \"#212121\",\r\n\t\tdisplay : \"flex\",\r\n\t},\r\n\theader : {\r\n\t\tmargin : \"104px 60px 0px 300px\", \r\n\t},\r\n\toverlay : {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\talignItems : \"center\",\r\n\t\t\tjustifyContent : \"center\",\r\n\t\t\tdisplay : \"flex\",\r\n\t},\r\n\theaderTitle : {\r\n\t\t// color : \"#fff\",\r\n\t\t// fontFamily : \"Oleo Script Swash Caps\"\r\n\t},\r\n\tdrawer : {\r\n\t\twidth : \"220px\",\r\n\t},\r\n\tdrawerPaper : {\r\n\t\twidth : \"220px\",\r\n\t\tborder : \"none\",\r\n\t\tmarginTop : \"104px\",\r\n\t\tpaddingLeft : \"20px\",\r\n\t\tbackground : \"transparent\",\r\n\t\t\"&::-webkit-scrollbar\" : {\r\n\t\t\twidth: \"0.3em\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-track\" : {\r\n\t\t\tboxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-thumb\" : {\r\n\t\t\tbackgroundColor: \"darkgrey\",\r\n\t\t\toutline: \"1px solid slategrey\",\r\n\t\t}\r\n\t},\r\n\tdrawerContainer : {\r\n\r\n\t}\r\n})\r\n\r\nclass RecipeSearch extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"RecipeSearch: \",props)\r\n\t\tlet query_string = queryString.parse(props.location.search)\r\n\t\tthis.state = {\r\n\t\t\tresults : [],\r\n\t\t\tisLoaded : false,\r\n\t\t\tquery : query_string.query || \"\",\r\n\t\t\tselectedCuisine : query_string.cuisine || \"\",\r\n\t\t\tselectedDiet : query_string.diet || \"\",\r\n\t\t\tselectedTolerance : query_string.intolerances || \"\",\r\n\t\t\tselectedMealType : query_string.mealType || \"\",\r\n\t\t\tsortParameter : query_string.sortParameter || \"\",\r\n\t\t\tnumber : query_string.number || 20,\r\n\t\t\toffset : query_string.offset || 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tif (this.props && this.props.location && this.props.location.state && this.props.location.state.data) {\r\n\t\t\tlet query_string = queryString.parse(this.props.location.search)\r\n      this.setState({\r\n        results: this.props.location.state.data.results && this.props.location.state.data.results,\r\n\t\t\t\tquery : query_string.query || \"\",\r\n\t\t\t\tselectedCuisine : query_string.cuisine || \"\",\r\n\t\t\t\tselectedDiet : query_string.diet || \"\",\r\n\t\t\t\tselectedTolerance : query_string.intolerances || \"\",\r\n\t\t\t\tselectedMealType : query_string.mealType || \"\",\r\n\t\t\t\tsortParameter : query_string.sortParameter || \"\",\r\n\t\t\t\tnumber : query_string.number || 20,\r\n\t\t\t\toffset : query_string.offset || 0,\r\n        isLoaded: true\r\n      });\r\n    } else {\r\n\t\t\tthis.searchRecipes(this.state.query, 20, 0, this.state.selectedCuisine, this.state.selectedDiet, this.state.selectedTolerance, this.state.selectedMealType, this.state.sortParameter);\r\n\t\t}\r\n\t\t// this.setState({\r\n\t\t// \tresults : sample.results,\r\n\t\t// \tisLoaded : true\r\n\t\t// })\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.location.search !== this.props.location.search){\r\n\t\t\tlet currentQuery = queryString.parse(this.props.location.search);\r\n      this.setState({ \r\n\t\t\t\tquery : currentQuery.query || \"\",\r\n\t\t\t\tselectedCuisine : currentQuery.cuisine || \"\",\r\n\t\t\t\tselectedDiet : currentQuery.diet || \"\",\r\n\t\t\t\tselectedTolerance : currentQuery.intolerances || \"\",\r\n\t\t\t\tselectedMealType : currentQuery.mealType || \"\",\r\n\t\t\t\tsortParameter : currentQuery.sortParameter || \"\",\r\n\t\t\t\tnumber : currentQuery.number || 20,\r\n\t\t\t\toffset : currentQuery.offset || 0,\r\n\t\t\t\tisLoaded: true\r\n\t\t\t}, () => {\r\n        this.searchRecipes(this.state.query, 20, 0, this.state.selectedCuisine, this.state.selectedDiet, this.state.selectedTolerance, this.state.selectedMealType, this.state.sortParameter);\r\n\t\t\t});\r\n    }\r\n\t}\r\n\r\n\tsearchRecipes = (query, number, offset, cuisine = \"\", diet = \"\", intolerances = \"\", mealType = \"\", sort = \"\") => {\r\n\t\trecipeSearchAPI(query, number, offset, cuisine, diet, intolerances, mealType, sort)\r\n\t\t.then(res => {\r\n\t\t\t// console.log(res)\r\n\t\t\tthis.setState({\r\n\t\t\t\tresults : res.results,\r\n\t\t\t\tisLoaded : true\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.history.replace(\r\n\t\t\t\t\t`${this.props.history.location.pathname}?query=${this.state.query}&cuisine=${this.state.selectedCuisine}&diet=${this.state.selectedDiet}&intolerances=${this.state.selectedTolerance}&mealType=${this.state.selectedMealType}&sortParameter=${this.state.sortParameter}&number=${this.state.number}&offset=${this.state.offset}`,\r\n\t\t\t\t\t{ data: { results: res.results } });\r\n\t\t\t})\r\n\t\t}).catch(err => console.log(err))\r\n\t}\r\n\r\n\tredirectToRecipeDetails = (id) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/details/${id}`,\r\n\t\t});\r\n\t}\r\n\r\n\tapplyFilter = (values) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedCuisine : values.selectedCuisine.join(),\r\n\t\t\tselectedDiet : values.selectedDiet.join(),\r\n\t\t\tselectedTolerance : values.selectedIntolerance.join(),\r\n\t\t\tselectedMealType : values.selectedMealType.join()\r\n\t\t}, () => {\r\n\t\t\tthis.props.history.replace(\r\n\t\t\t\t`${this.props.history.location.pathname}?query=${this.state.query}&cuisine=${this.state.selectedCuisine}&diet=${this.state.selectedDiet}&intolerances=${this.state.selectedTolerance}&mealType=${this.state.selectedMealType}&sortParameter=${this.state.sortParameter}&number=${this.state.number}&offset=${this.state.offset}`);\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t  <Grid container className = {classes.root}>\r\n\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<NavBar home = {true}/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.header}>\r\n\t\t\t\t\t\t<Typography variant = \"h6\" className = {classes.headerTitle}>\r\n\t\t\t\t\t\t\t{\"Recipes For \" + this.state.query}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t      </Grid>\r\n\r\n\t\t\t\t  <Grid item xs = {12} style = {{margin : \"30px 60px 0px 300px\"}}>\r\n\t\t\t\t\t{this.state.isLoaded && this.state.results.length > 0 &&\r\n\t\t\t\t\t\t<Grid container className = {classes.root} spacing = {4}>\r\n\t\t\t\t\t\t\t{this.state.results.map(item => (\r\n\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t<RecipeCard id = {item.id} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage = {item.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// image = {CONFIG.IMAGE_URL_RECIPE + item.id + \"-480x360.jpg\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle = {item.title} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// servings = {item.servings}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// time = {item.readyInMinutes}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboxShadow = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tredirectToRecipeDetails = {this.redirectToRecipeDetails}/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Drawer className={classes.drawer} variant=\"persistent\" open = {true} classes={{ paper: classes.drawerPaper,}}>\r\n\t\t\t\t\t\t<div className={classes.drawerContainer}>\r\n\t\t\t\t\t\t\t<DrawerJSX applyFilter = {this.applyFilter} \t\r\n\t\t\t\t\t\t\t           selectedCuisine = {this.state.selectedCuisine.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedDiet = {this.state.selectedDiet.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedTolerance = {this.state.selectedTolerance.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedMealType = {this.state.selectedMealType.split(\",\")}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Drawer>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(RecipeSearch);","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeDetails.js",["82","83","84","85","86","87","88","89"],"D:\\My Projects\\react-recipe\\client\\src\\ServiceClass.js",[],"D:\\My Projects\\react-recipe\\client\\src\\Components\\NavBar.js",["90"],"import React, {Component} from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LogoIcon from '../Assets/Icons/Logo.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tflexGrow : \"1\"\r\n\t},\r\n\tappBar : {\r\n\tcolor: \"#fff\",\r\n\tposition : \"fixed\",\r\n\tzIndex : \"1400\"\r\n\t// backgroundColor: \"#0d1010\",\r\n    // backgroundColor: \"#932432\",\r\n\t},\r\n\ttitle: {\r\n\t\tpadding : \"0px 20px 0px 0px\",\r\n\t\tmargin : \"0px 20px 0px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\"\r\n\t\t// borderRight : \"2px solid white\",\r\n\t},\r\n\tappBarItems : {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"32px\", \r\n\t\twidth : \"32px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n\tsearch: {\r\n\t\tposition: 'relative',\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.15)\",\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: \"rgba(255, 255, 255, 0.25);\",\r\n\t\t},\r\n\t\tmarginLeft: 0,\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tmarginLeft: \"8px\",\r\n\t\t\twidth: 'auto',\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: \"0px 16px\",\r\n\t\theight: '100%',\r\n\t\tposition: 'absolute',\r\n\t\tpointerEvents: 'none',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n\t\tpadding : \"8px 8px 8px 0px\",\r\n    transition : \"width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    paddingLeft : \"calc(1em + 32px)\",\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n\t},\r\n\tlogin : {\r\n\t\t// padding : \"0px 0px 0px 20px\",\r\n\t\tmargin : \"0px 0px 0px 20px\",\r\n\t\t// borderRight : \"2px solid white\",\r\n\t\tcolor : \"#932432\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t\t// backgroundColor : \"#932432\"\r\n\t}\r\n})\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props){\r\n\t\t// console.log(props)\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\tgetToken = () => {\r\n\t\tconst tokenString = sessionStorage.getItem('session');\r\n\t\tconst userToken = JSON.parse(tokenString);\r\n\t\t// console.log(\"NavBar\", userToken ? true : false)\r\n\t\treturn userToken ? true : false\r\n\t}\r\n\r\n\tredirect = () => {\r\n\t\tlet isUserLoggedIn = this.getToken() ;\r\n\t\tisUserLoggedIn \r\n\t\t? this.props.history.push({\r\n\t\t\t\tpathname: `/recipe/dashboard`,\r\n\t\t\t})\r\n\t\t: this.props.history.push({\r\n\t\t\t\tpathname: `/recipe/login`,\r\n\t\t\t});\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\tlet isUserLoggedIn = this.getToken() ;\r\n\t\treturn(\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<AppBar position=\"static\" className = {classes.appBar} style = {{backgroundColor : this.props.home === true ? \"#0d1010\" : \"#932432\"}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t  <div>\r\n\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h4\" noWrap>\r\n\t\t\t\t\t\t\t\tRecipe \t<img src = {LogoIcon} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = {classes.appBarItems}>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBase placeholder=\"Search…\"\r\n\t\t\t\t\t\t\t\tclasses={{ root: classes.inputRoot, input: classes.inputInput, }}\r\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button className = {classes.login} variant=\"outlined\" noWrap\r\n\t\t\t\t\t\t\t        onClick = {this.redirect}>\r\n\t\t\t\t\t\t\t  {\tisUserLoggedIn ? \"Dashboard\" : \"Login/ Signup\"}\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(withStyles(style, {withTheme: true})(NavBar));","D:\\My Projects\\react-recipe\\client\\src\\Config.js",["91","92"],"// const BASE_URL = \"https://api.spoonacular.com\"\r\nconst BASE_URL_RECIPE = \"/recipes\"\r\nconst BASE_URL_USER = \"/user\"\r\nconst SPLASH_URL = \"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\";\r\nlet id = 1;\r\nconst IMAGE_URL_RECIPE = \" https://spoonacular.com/recipeImages/\";\r\nconst IMAGE_URL_PRODUCT = \"https://spoonacular.com/productImages/\";\r\nconst IMAGE_URL_INGREDIENT = \"https://spoonacular.com/cdn/ingredients\"\r\nconst IMAGE_URL_EQUIPMENT = \"https://spoonacular.com/cdn/equipment\"\r\n\r\nconst RECIPE_SEARCH_URL = BASE_URL_RECIPE + `/getRecipes`;\r\nconst INGREDIENT_SEARCH = BASE_URL_RECIPE + `/recipes/findByIngredients`\r\nconst RECIPE_DETAILS_URL = BASE_URL_RECIPE + `/getRecipeDetails`;\r\nconst SIMILAR_RECIPES_URL = BASE_URL_RECIPE + `/getSimilarRecipes`;\r\nconst RANDOM_RECIPES = BASE_URL_RECIPE + `/getRandomRecipes`;\r\nconst RECIPES_AUTOCOMPLETE = BASE_URL_RECIPE + `/recipeAutocomplete`;\r\nconst RECIPE_EQUIPMENTS = BASE_URL_RECIPE + `/getRecipeEquipments`;\r\n\r\nconst LOGIN_URL = BASE_URL_USER + `/login`;\r\nconst SIGNUP_URL = BASE_URL_USER + `/signup`;\r\nconst DASHBOARD_URL = BASE_URL_USER + `/dashboard`;\r\nconst USER_URL =  BASE_URL_USER + `/user`\r\nconst CREATE_COOKBOOK_URL =  BASE_URL_USER + `/createCookbook`;\r\nconst CHANGE_COOKBOOK_URL =  BASE_URL_USER + `/changeCookbook`;\r\nconst CHANGE_COOKBOOK_NAME_URL =  BASE_URL_USER + `/changeCookbookName`;\r\nconst DELETE_COOKBOOK_URL = BASE_URL_USER + `/deleteCookbook`;\r\nconst GET_BOOKMARKED_RECIPES_URL =  BASE_URL_USER + `/getBookmarkedRecipes`\r\nconst BOOKMARK_RECIPE_URL =  BASE_URL_USER + `/bookmarkRecipe`\r\nconst DELETE_BOOKMARK_URL =  BASE_URL_USER + `/deleteBookmark`\r\n\r\n\r\nexport default {\r\n\tRECIPES_AUTOCOMPLETE,\r\n    RECIPE_SEARCH_URL,\r\n    INGREDIENT_SEARCH,\r\n\tRECIPE_DETAILS_URL,\r\n\tSIMILAR_RECIPES_URL,\r\n\tRANDOM_RECIPES,\r\n\tRECIPE_EQUIPMENTS,\r\n\tSPLASH_URL,\r\n\tIMAGE_URL_RECIPE,\r\n\tIMAGE_URL_PRODUCT,\r\n\tIMAGE_URL_INGREDIENT,\r\n\tIMAGE_URL_EQUIPMENT,\r\n\tLOGIN_URL,\r\n\tSIGNUP_URL,\r\n\tDASHBOARD_URL,\r\n\tUSER_URL,\r\n\tCREATE_COOKBOOK_URL,\r\n\tGET_BOOKMARKED_RECIPES_URL,\r\n\tBOOKMARK_RECIPE_URL,\r\n\tDELETE_BOOKMARK_URL,\r\n\tCHANGE_COOKBOOK_URL,\r\n\tCHANGE_COOKBOOK_NAME_URL,\r\n\tDELETE_COOKBOOK_URL\r\n};","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeCard.js",["93","94","95","96","97"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\NutritionChart.js",["98","99","100","101"],"import React, {Component} from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst style = theme => ({\r\n\r\n})\r\n\r\nclass Recipes extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"Nutrition Charts\",this.props)\r\n\t\tlet percentage = [], amounts = [], labels = [];\r\n\t\tthis.props.data.map(item =>{\r\n\t\t\tpercentage.push(item.percentOfDailyNeeds)\r\n\t\t\t// amounts.push(item.amount + \" \" + item.unit)\r\n\t\t\tlabels.push(item.name + \" (\" + item.amount + \" \" + item.unit + \") \")\r\n\t\t})\r\n\r\n\t\tlet letters = '0123456789ABCDEF'.split('');\r\n\t\tlet colorArr = []\r\n\t\tfor(let i = 0; i < percentage.length ; i++ ){\r\n\t\t  let color = '#';\r\n\t\t\tfor (let j = 0; j < 6; j++ ) {\r\n\t\t\t\tcolor += letters[Math.floor(Math.random() * 16)];\r\n\t\t\t}\r\n\t\t\tcolorArr.push(color)\r\n\t  }\r\n\r\n    let chartData = {\r\n      labels: labels,\r\n      datasets:\r\n        [{\r\n          type: 'doughnut',\r\n          label: labels,\r\n          data: percentage,\r\n          borderWidth: 1,\r\n          backgroundColor: colorArr,\r\n          borderColor: \"white\",\r\n          hoverBorderColor: 'fff',\r\n        }]\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tchartData : chartData\r\n\t\t}\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t  <div style = {{marginTop : \"60px\"}}>\r\n\t\t\t\t<Doughnut data = {this.state.chartData}\r\n\t\t\t\t\ttype=\"doughnut\"\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t// responsive: true,\r\n\t\t\t\t\t\t// maintainAspectRatio: false,\r\n\t\t\t\t\t\taspectRatio : 3,\r\n\t\t\t\t\t\tsegmentShowStroke : true,\r\n\t\t\t\t\t\tsegmentStrokeColor : \"#fff\",\r\n\t\t\t\t\t\tsegmentStrokeWidth : 2,\r\n\t\t\t\t\t\tpercentageInnerCutout : 50,\r\n\t\t\t\t\t\tanimationSteps : 100,\r\n\t\t\t\t\t\tanimationEasing : \"easeOutBounce\",\r\n\t\t\t\t\t\tanimateRotate : true,\r\n\t\t\t\t\t\tanimateScale : false,\r\n\t\t\t\t\t\tshowScale: true,\r\n\t\t\t\t\t\tanimateScale: true,\r\n\t\t\t\t\t\t// title : {\r\n\t\t\t\t\t\t// \tposition: \"top\",\r\n\t\t\t\t\t\t// \ttext: \"Nutrition Chart\",\r\n\t\t\t\t\t\t// \tdisplay: true,\r\n\t\t\t\t\t\t// \tfontSize: 18,\r\n\t\t\t\t\t\t// \tfontColor: \"#111\"\r\n\t\t\t\t\t\t// },\r\n\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\tposition: \"right\",\r\n\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\tfontColor: \"#333\",\r\n                fontSize: 14\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t  </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(Recipes);","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipesHome.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeHeader.js",["119","120"],"import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';import vegIcon from '../Assets/Icons/veg.svg'\r\nimport nonVegIcon from '../Assets/Icons/nonVeg.svg'\r\n\r\nconst style = theme => ({\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tinfoLabelBold : {\r\n\t\tfontSize : \"1.5rem\",\r\n\t\tfontWeight : \"bold\"\r\n\t},\r\n\tinfoLabel : {\r\n\t\tfontSize : \"1.5rem\",\r\n\t},\r\n\tvegIcon : {\r\n\t\theight : \"70px\",\r\n\t\twidth : \"70px\"\r\n\t},\r\n\tgridCenterFlex : {\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n})\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter} style = {{marginBottom : \"30px\"}}>\r\n\t\t\t\t\t<Typography variant = \"h3\">{this.props.details.title}</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter} style = {{\"border-right\" : \"0.1px grey solid\"}}>\r\n\t\t\t\t\t{/*<Tooltip title = {\"Cook Time\"}><img src = {timeIcon} className = {classes.logo}/></Tooltip>*/}\r\n\t\t\t\t\t<Typography variant = \"button\" className = {classes.infoLabelBold}>Cook Time</Typography>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.infoLabel}>\r\n\t\t\t\t\t\t{this.props.details.readyInMinutes}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter} style = {{\"border-right\" : \"0.1px grey solid\"}}>\r\n\t\t\t\t\t<Typography variant = \"button\" className = {classes.infoLabelBold}>Servings</Typography>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.infoLabel}>\r\n\t\t\t\t\t\t{this.props.details.servings}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter}>\r\n\t\t\t\t\t<Tooltip title = {\"Vegetarian/ Non-vegetarian\"}>\r\n\t\t\t\t\t\t<img src = {this.props.details.vegetarian ? vegIcon : nonVegIcon} \r\n\t\t\t\t\t\t\t\tclassName = {classes.vegIcon}/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenterFlex} style = {{marginTop : \"30px\"}}>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" style = {{display : \"inline\"}}>\r\n\t\t\t\t\t\t{\"AUTHOR : \"} {this.props.details.creditsText}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenterFlex} style = {{marginTop : \"10px\"}}>\r\n\t\t\t\t\t{this.props.details.dishTypes.length > 0 && this.props.details.dishTypes.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.cuisines.length > 0 && this.props.details.cuisines.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.diets.length > 0 && this.props.details.diets.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.occasions.length > 0 && this.props.details.occasions.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(NavBar);","D:\\My Projects\\react-recipe\\client\\src\\Components\\LogIn.js",["121","122","123","124"],"import React, {Component, useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {loginAPI} from '../ServiceClass.js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport loginBackground from '../Assets/Images/background/login_background.jpg';\r\nimport { Card, TextField, Grid, Button} from '@material-ui/core';\r\nimport LogoIcon from '../Assets/Icons/LogoColor.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundImage : `url(${loginBackground})`,\r\n\t\theight : \"100vh\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tcard : {\r\n\t\theight : \"70vh\",\r\n\t\twidth : \"400px\",\r\n\t\tborder: \"1px solid #fff\",\r\n\t\tborderRadius: \"15px\",\r\n\t\tboxShadow: \"0 0 1rem 0 rgba(0, 0, 0, 0.2)\",\r\n\t\t// backdropFilter: \"blur(5px) saturate(100%) contrast(45%) brightness(130%)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n\t\t// textAlign : \"center\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\ttextField : {\r\n\t\tmarginBottom : \"30px\",\r\n\t\twidth : \"100%\",\r\n\t\t\"& .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#932432\"\r\n\t\t},\r\n\t\t\"& .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#fff\",\r\n\t\t},\r\n\t\t\"&:hover .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .Mui-focused .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\"\r\n\t\t},\r\n\t\t\"& .Mui-focused\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .MuiOutlinedInput-notchedOutline\" : {\r\n\t\t\tborderColor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#932432\"\r\n    },\r\n\t},\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tbutton : {\r\n\t\tmarginBottom : \"20px\",\r\n\t\twidth : \"100%\",\r\n\t\tcolor : \"#fff\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t},\r\n\tsignupLink : {\r\n\t\tcursor : \"pointer\",\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tsignupText : {\r\n\t\t\"&:hover\" : {\r\n\t\t\ttextDecoration : \"underline\"\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\t// padding : \"0px 20px 0px 0px\",\r\n\t\tmargin : \"0px 0px 20px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\",\r\n\t\tcolor : \"#932432\",\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"42px\", \r\n\t\twidth : \"42px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n})\r\n\r\nconst LogIn = (props) => {\r\n\tlet [email, setEmail] = useState('');\r\n\tlet [password, setPassword] = useState('');\r\n\r\n\tconst redirectToSignup = () => {\r\n\t\tprops.history.push({\r\n\t\t\tpathname: `${props.baseURL}/signup`,\r\n\t\t});\r\n\t}\r\n\r\n\tconst redirectToDashboard = () => {\r\n\t\tconsole.log(email, password)\r\n\t\tloginAPI(email, password)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tif(res && res.success){\r\n\t\t\t\tsessionStorage.setItem('session', JSON.stringify(res.sessionID));\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.cookbooks));\r\n\t\t\t\tsessionStorage.setItem('user', JSON.stringify(res.user));\r\n\t\t\t\tsessionStorage.setItem('recipes', JSON.stringify(res.recipes));\r\n\t\t\t\tprops.history.push({\r\n\t\t\t\t\tpathname: `${props.baseURL}/home`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst emailChangeHandler = (event) => {\r\n\t\tsetEmail(event.target.value)\r\n\t}\r\n\r\n\tconst passwordChangeHandler = (event) => {\r\n\t\tsetPassword(event.target.value)\r\n\t}\r\n\r\n\t\tconst { classes, theme } = props;\r\n\t\treturn(\r\n\t\t\t<div className = {classes.root}>\r\n\t\t\t\t<Card className = {classes.card}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h3\" noWrap>\r\n\t\t\t\t\t\t\t\t\tRecipe \t<img src = {LogoIcon} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {emailChangeHandler(e)}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {passwordChangeHandler(e)}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.button} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor = \"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => redirectToDashboard()}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} \r\n\t\t\t\t\t\t      className = {classes.signupLink} \r\n\t\t\t\t\t\t      onClick = {() => {redirectToSignup()}}>\r\n\t\t\t\t\t\t\t<Typography variant=\"caption\" color = \"secondary\" className = {classes.signupText}>\r\n\t\t\t\t\t\t\t\tDon't have an Account? Signup Now!\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(LogIn);","D:\\My Projects\\react-recipe\\client\\src\\Components\\SignUp.js",["125","126"],"import React, {Component, useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {signupAPI} from '../ServiceClass.js';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card, TextField, Grid, Button, InputAdornment, IconButton  } from '@material-ui/core';\r\nimport signupBackground from '../Assets/Images/background/signup_background.jpg';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport LogoIcon from '../Assets/Icons/Logo.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundImage : `url(${signupBackground})`,\r\n\t\theight : \"100vh\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t\talignItems : \"center\",\r\n\t\t// justifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tcard : {\r\n\t\theight : \"70vh\",\r\n\t\twidth : \"300px\",\r\n\t\tmargin : \"15vw\",\r\n\t\tborder: \"1px solid #fff\",\r\n\t\tborderRadius: \"15px\",\r\n\t\tboxShadow: \"0 0 1rem 0 rgba(0, 0, 0, 0.2)\",\r\n\t\t// backdropFilter: \"blur(5px) saturate(100%) contrast(45%) brightness(130%)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\t\r\n\ttextField : {\r\n\t\tmarginBottom : \"30px\",\r\n\t\twidth : \"100%\",\r\n\t\t\"& .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#932432\"\r\n\t\t},\r\n\t\t\"& .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .Mui-focused .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\"\r\n\t\t},\r\n\t\t\"& .Mui-focused\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .MuiOutlinedInput-notchedOutline\" : {\r\n\t\t\tborderColor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#932432\"\r\n    },\r\n\t},\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tbutton : {\r\n\t\tmarginBottom : \"20px\",\r\n\t\twidth : \"100%\",\r\n\t\tcolor : \"#fff\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t},\r\n\tsignupLink : {\r\n\t\tcursor : \"pointer\",\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tsignupText : {\r\n\t\t\"&:hover\" : {\r\n\t\t\ttextDecoration : \"underline\"\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\tmargin : \"0px 0px 20px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\",\r\n\t\tcolor : \"#fff\",\r\n\t\tfontSize : \"10rem\"\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"42px\", \r\n\t\twidth : \"42px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n\tsubHeading: {\r\n\t\tcolor : \"#fff\",\r\n\t},\r\n\ticonButton : {\r\n\t\tcolor : \"rgba(225, 225, 225, 0.50)\",\r\n\t}\r\n})\r\n\r\nconst SignUp = (props) => {\r\n\tlet [values, setValues] = useState({\r\n\t\tusername : '',\r\n\t\temail : ''\r\n\t})\r\n\tlet [password, setPassword] = useState({\r\n\t\tvalue : '',\r\n\t\tshowPassword : false\r\n\t});\r\n\tlet [confirmPassword, setConfirmPassword] = useState({\r\n\t\tvalue : '',\r\n\t\tshowPassword : false\r\n\t});\r\n\r\n\r\n\tconst redirectToSignup = () => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/login`,\r\n\t\t});\r\n\t}\r\n\r\n\tconst textFieldChangeHandler = (event, id) =>{\r\n\t\tsetValues({ ...values, [id]: event.target.value });\r\n\t}\r\n\r\n\tconst passwordChangeHandler = (event) => {\r\n\t\tsetPassword({...password, value : event.target.value})\r\n\t}\r\n\r\n\tconst handleClickShowPassword = () => {\r\n    setPassword({ ...password, showPassword: !password.showPassword });\r\n  };\r\n\r\n\tconst confirmPasswordChangeHandler = (event) => {\r\n\t\tsetConfirmPassword({...confirmPassword, value : event.target.value})\r\n\t}\r\n\r\n\tconst handleClickShowConfirmPassword = () => {\r\n    setConfirmPassword({ ...confirmPassword, showPassword: !confirmPassword.showPassword });\r\n  };\r\n\r\n\tconst signupUser = () => {\r\n\t\tconsole.log(values.username, values.email, password.value, confirmPassword.value);\r\n\t\tif(password.value === confirmPassword.value){\r\n\t\t\tsignupAPI(values.username, values.email, password.value)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res && res.success){\r\n\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\tpathname: `${props.baseURL}/login`,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}).catch(err => console.log(err))\r\n\t\t}else{\r\n\t\t\tconsole.log(\"Incorrect Password\");\r\n\t\t}\r\n\t}\r\n\r\n\t\tconst { classes } = props;\r\n\t\treturn(\r\n\t\t\t<div className = {classes.root}>\r\n\t\t\t\t<Card className = {classes.card}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"User Name\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {values.username}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {textFieldChangeHandler(e, 'username')}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {textFieldChangeHandler(e, 'email')}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t type={password.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {password.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {passwordChangeHandler(e)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton classes = {{root : classes.iconButton}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickShowPassword()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => {e.preventDefault()}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{password.showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t\t</Grid>\t\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Confirm Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t type={confirmPassword.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {confirmPassword.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {confirmPasswordChangeHandler(e)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton classes = {{root : classes.iconButton}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickShowConfirmPassword()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => {e.preventDefault()}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{confirmPassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t  </Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.button} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor = \"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {signupUser()}}>\r\n\t\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.signupLink} onClick = {() => {redirectToSignup()}}>\r\n\t\t\t\t\t\t\t<Typography variant=\"caption\" color = \"secondary\" className = {classes.signupText}>\r\n\t\t\t\t\t\t\t\tAlready have an Account? Login Now!\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid container style = {{width : \"500px\"}}>\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t<Typography className={classes.title} variant=\"h1\" noWrap>\r\n\t\t\t\t\t\t\tRecipe\r\n\t\t\t\t\t  </Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t<Typography className={classes.subHeading} variant=\"h4\">\r\n\t\t\t\t\t\t  Register for a free account to save your favourite recipes to your recipe box!\r\n\t\t\t\t\t  </Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\nexport default withStyles(style, {withTheme: true})(SignUp);","D:\\My Projects\\react-recipe\\client\\src\\Components\\Dashboard.js",["127","128","129","130","131","132","133","134"],"import React, {Component} from 'react';\r\nimport {getBookmarkedRecipesAPI, createCookbookAPI, changeCookbookNameAPI, deleteCookbookAPI} from '../ServiceClass.js';\r\nimport CONFIG from '../Config.js'\r\nimport NavBar from './NavBar.js';\r\nimport RecipeCard from './RecipeCard.js'\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport dashboardBackground from '../Assets/Images/background/dashboard_background.jpg';\r\nimport { Typography, Card, Grid, TextField} from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Cookbook from '../Assets/Icons/Cookbook.svg'\r\nimport CookbookColored from '../Assets/Icons/CookbookColored.svg'\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.65)\",\r\n\t\tdisplay : \"flex\",\r\n\t\t// backgroundImage : `url(${dashboardBackground})`,\r\n\t\t// height : \"100vh\",\r\n\t\t// backgroundAttachment: \"fixed\",\r\n\t\t// backgroundRepeat: \"no-repeat\",\r\n\t\t// backgroundSize: \"cover\",\r\n\t\t// backgroundPosition: \"top center\",\r\n\t},\r\n\tmainCard : {\r\n\t\theight : \"100%\",\r\n\t\twidth : \"auto\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\tcard : {\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tboxShadow : \"none\",\r\n\t\tpadding : \"20px 0px\",\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tnewCard : {\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tpadding : \"20px 10px\",\r\n\t\tcursor : \"pointer\",\r\n\t\tboxShadow : \"none\",\r\n\t\tborder : \"2px solid #000\",\r\n\t\tposition : \"relative\"\r\n\t},\r\n\tgridCenter : {\r\n  \talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"70px\",\r\n\t\twidth : \"70px\",\r\n\t},\r\n\tcookbookName : {\r\n\t},\r\n\tnoRecipeText : {\r\n\t\ttextAlign : \"center\",\r\n\t\tmarginTop : \"80px\",\r\n\t\twidth : \"100%\"\r\n\t},\r\n\taddCookbookIcon : {\r\n\t\theight: \"35px\",\r\n    width: \"35px\",\r\n    verticalAlign: \"bottom\",\r\n    marginLeft: \"10px\",\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tnameTextField : {\r\n\t\t\"& .MuiInputLabel-marginDense\" : {\r\n\t\t\ttransform: \"translate(0, 7px) scale(1)\",\r\n\t\t},\r\n\t\t\"& .MuiInput-formControl\" : {\r\n\t\t\tmarginTop : \"0px\"\r\n\t\t},\r\n\t\t\"& .MuiInput-underline:after\" : {\r\n\t\t\tborderBottom : \"2px solid #000\"\r\n\t\t},\r\n\t\t\"& .MuiFormLabel-root.Mui-focused\" : {\r\n\t\t\tcolor : \"rgba(0, 0, 0, 0.42)\"\r\n\t\t}\r\n\t},\r\n\tcheckIcon : {\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tcancelIcon : {\r\n\t\tcursor : \"pointer\",\r\n\t\tposition : \"absolute\",\r\n\t\ttop : 0,\r\n\t\tright : 0,\r\n\t\tcolor : \"rgba(0, 0, 0, 0.42)\",\r\n\t\tmargin : \"5px\",\r\n\t\t\"& :hover\" : {\r\n\t\t\tcolor : \"#000\"\r\n\t\t}\r\n\t},\r\n\teditIcon : {\r\n\t\tfloat : \"right\",\r\n\t\tcursor : \"pointer\",\r\n\t\tmarginRight : \"20px\"\r\n\t},\r\n\tdeleteIcon : {\r\n\t\tfloat : \"right\",\r\n\t\tcursor : \"pointer\",\r\n\t\tmarginRight : \"20px\"\r\n\t}\r\n})\r\n\r\nclass Dashboard extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tconst cookbooks = sessionStorage.getItem('cookbooks');\r\n\t\tconst cookbookIds = JSON.parse(cookbooks)\r\n\t\tthis.state = {\r\n\t\t\tcookbooks : JSON.parse(cookbooks) || [],\r\n\t\t\tcookbooksData : null,\r\n\t\t\tactiveID : cookbookIds && cookbookIds.length > 0 && cookbookIds[0].cookbook_id || \"\",\r\n\t\t\tisLoaded : false,\r\n\t\t\tnewCookbookFlag : false,\r\n\t\t\tnewName : \"\",\r\n\t\t\teditCookbookNameFlag : false,\r\n\t\t\tcurrentNewName : \"\",\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.getCookBooksData()\r\n\t}\r\n\r\n\tgetCookBooksData = () => {\r\n\t\tlet cookbookIDsArray = [];\r\n\t\tthis.state.cookbooks.map(item =>{ cookbookIDsArray.push(item.cookbook_id) })\r\n\t\tlet cookbookIds = cookbookIDsArray.join()\r\n\t\tgetBookmarkedRecipesAPI(cookbookIds)\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcookbooksData : res\r\n\t\t\t},() => {\r\n\t\t\t\tconsole.log(this.state)\r\n\t\t\t})\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tredirectToRecipeDetails = (id) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/details/${id}`,\r\n\t\t});\r\n\t}\r\n\r\n\tchangeActiveID = (id) => {\r\n\t\tthis.setState({\r\n\t\t\tactiveID : id\r\n\t\t})\r\n\t}\r\n\r\n\taddNewCookbook = () => {\r\n\t\tcreateCookbookAPI(this.state.newName)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tnewCookbookFlag : false,\r\n\t\t\t\t\tnewName : \"\"\r\n\t\t\t\t},() => { this.getCookBooksData()\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\teditCookbookName = () => {\r\n\t\tthis.setState({\r\n\t\t\teditCookbookNameFlag : true\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteCookbook = () => {\r\n\t\tdeleteCookbookAPI(this.state.activeID)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tactiveID : this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.cookbooks[0].cookbook_id || \"\",\r\n\t\t\t\t},() => { this.getCookBooksData()\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tchangeCookbookName = () => {\r\n\t\tchangeCookbookNameAPI(this.state.activeID, this.state.currentNewName)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tcurrentNewName : \"\",\r\n\t\t\t\t\teditCookbookNameFlag : false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tgetCurrentCookbookName = (id) => {\r\n\t\tlet currentCookbook = this.state.cookbooks.find(item => ( item.cookbook_id === id))\r\n\t\treturn currentCookbook.cookbook_name\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t\t<Grid container className = {classes.root}>\r\n\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<NavBar home = {true}/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container style = {{margin : \"84px 40px 0px 40px\"}} >\r\n\t\t\t\t\t\t<Grid item xs = {8} >\r\n\t\t\t\t\t\t\t<Grid container>\r\n\r\n\t\t\t\t\t\t\t  <Grid item xs = {12} style = {{marginBottom : \"20px\"}}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant = \"h6\">\r\n\t\t\t\t\t\t\t\t\t  My Cookbooks \r\n\t\t\t\t\t\t\t\t\t\t<AddIcon className = {classes.addCookbookIcon} \r\n\t\t\t\t\t\t\t\t\t\t         onClick = {() => {this.setState({ newCookbookFlag : true }) }}/>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid container item xs = {12} spacing = {4} style = {{marginBottom : \"20px\"}}>\r\n\t\t\t\t\t\t\t\t\t{this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.cookbooks.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs = {2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className = {classes.card} onClick = {() => {this.changeActiveID(item.cookbook_id)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src = {item.cookbook_id === this.state.activeID ? CookbookColored : Cookbook} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t     className = {classes.logo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.cookbookName}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.cookbook_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t{this.state.newCookbookFlag &&\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className = {classes.newCard}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src = {Cookbook} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField label={this.state.newName === \"\" ? \"Add Name\" : \"\"} size = \"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.nameTextField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(event) => { \tthis.setState({ newName : event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: false }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon className = {classes.checkIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {this.addNewCookbook}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{color : this.state.newName === \"\" ? \"rgba(0, 0, 0, 0.42)\" : \"#000\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon className = {classes.cancelIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t           onClick = {() => { \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t newName : \"\", \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t newCookbookFlag : false}) \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t\t\t<Card className = {classes.mainCard}>\r\n\t\t\t\t\t\t\t\t\t  <Grid container item xs = {12} spacing = {4}>\r\n\t\t\t\t\t\t\t\t\t\t\t{<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t\t\t\t\t    {this.state.editCookbookNameFlag === false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? <Typography variant = \"h6\" style = {{display : \"inline\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.activeID && \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.getCurrentCookbookName(this.state.activeID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <TextField label={this.state.currentNewName === \"\" ? \"Add Name\" : \"\"} size = \"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.nameTextField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(event) => { \tthis.setState({ currentNewName : event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t InputLabelProps={{ shrink: false }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  endAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <CheckIcon className = {classes.checkIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   onClick = {this.changeCookbookName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   style = {{color : this.state.currentNewName === \"\" ? \"rgba(0, 0, 0, 0.42)\" : \"#000\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon className = {classes.editIcon} onClick = {() => this.editCookbookName()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon className = {classes.deleteIcon} onClick = {() => this.deleteCookbook()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.cookbooksData && this.state.cookbooksData[this.state.activeID].length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? this.state.cookbooksData[this.state.activeID].map(item => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RecipeCard id = {item.recipe_id} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage = {CONFIG.IMAGE_URL_RECIPE + item.recipe_id + \"-312x231.\" + item.image_type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle = {item.recipe_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tredirectToRecipeDetails = {this.redirectToRecipeDetails}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallApi = {this.getCookBooksData}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxSize = \"120px\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <Typography variant = \"subtitle2\" className = {classes.noRecipeText}>No Recipes Saved In This Cookbook</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t\t\tUSER PREFERENCES\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n\t\t\t\t\t\t\t\t\t\topen={this.state.openSuccessSnackbar} autoHideDuration={5000}\r\n\t\t\t\t\t\t\t\t\t\tonClose={() => {\tthis.setState({openSuccessSnackbar : false}) }}>\r\n\t\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#4caf50', color : \"#fff\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t message = {this.state.successMessage}/>\r\n\t\t\t\t\t</Snackbar>\r\n\r\n\t\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center',}}\r\n\t\t\t\t\t\t\t\t\t\topen={this.state.openErrorSnackbar} autoHideDuration={3000} \r\n\t\t\t\t\t\t\t\t\t\tonClose={() => { \tthis.setState({openErrorSnackbar : false}) }}>\r\n\t\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#f44336', color : \"#fff\"}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t message={this.state.errorMessage}/>\r\n\t\t\t\t\t</Snackbar>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(Dashboard);","D:\\My Projects\\react-recipe\\client\\src\\Components\\theme.js",[],["135","136"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\DrawerJSX.js",["137","138"],{"ruleId":"139","severity":1,"message":"140","line":2,"column":32,"nodeType":"141","messageId":"142","endLine":2,"endColumn":40},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"139","severity":1,"message":"147","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":14},{"ruleId":"139","severity":1,"message":"148","line":14,"column":7,"nodeType":"141","messageId":"142","endLine":14,"endColumn":13},{"ruleId":"139","severity":1,"message":"149","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":20},{"ruleId":"139","severity":1,"message":"150","line":21,"column":8,"nodeType":"141","messageId":"142","endLine":21,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":110,"column":2,"nodeType":"153","messageId":"154","endLine":110,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":220,"column":7,"nodeType":"157","endLine":221,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":253,"column":9,"nodeType":"157","endLine":256,"endColumn":50},{"ruleId":"155","severity":1,"message":"156","line":286,"column":9,"nodeType":"157","endLine":289,"endColumn":50},{"ruleId":"139","severity":1,"message":"158","line":330,"column":11,"nodeType":"141","messageId":"142","endLine":330,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":369,"column":6,"nodeType":"157","endLine":369,"endColumn":79},{"ruleId":"155","severity":1,"message":"156","line":121,"column":17,"nodeType":"157","endLine":121,"endColumn":67},{"ruleId":"139","severity":1,"message":"159","line":5,"column":5,"nodeType":"141","messageId":"142","endLine":5,"endColumn":7},{"ruleId":"160","severity":1,"message":"161","line":32,"column":1,"nodeType":"162","endLine":56,"endColumn":3},{"ruleId":"163","severity":1,"message":"164","line":117,"column":62,"nodeType":"165","messageId":"166","endLine":117,"endColumn":64},{"ruleId":"163","severity":1,"message":"164","line":117,"column":97,"nodeType":"165","messageId":"166","endLine":117,"endColumn":99},{"ruleId":"167","severity":1,"message":"168","line":137,"column":26,"nodeType":"169","messageId":"170","endLine":137,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":274,"column":9,"nodeType":"157","endLine":275,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":308,"column":6,"nodeType":"157","endLine":308,"endColumn":63},{"ruleId":"139","severity":1,"message":"171","line":14,"column":24,"nodeType":"141","messageId":"142","endLine":14,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":15,"column":28,"nodeType":"169","messageId":"170","endLine":15,"endColumn":30},{"ruleId":"139","severity":1,"message":"158","line":51,"column":11,"nodeType":"141","messageId":"142","endLine":51,"endColumn":18},{"ruleId":"151","severity":1,"message":"172","line":70,"column":7,"nodeType":"153","messageId":"154","endLine":70,"endColumn":19},{"ruleId":"139","severity":1,"message":"149","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"139","severity":1,"message":"173","line":39,"column":8,"nodeType":"141","messageId":"142","endLine":39,"endColumn":13},{"ruleId":"139","severity":1,"message":"174","line":44,"column":8,"nodeType":"141","messageId":"142","endLine":44,"endColumn":18},{"ruleId":"139","severity":1,"message":"175","line":75,"column":7,"nodeType":"141","messageId":"142","endLine":75,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":436,"column":6,"nodeType":"157","endLine":436,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":443,"column":6,"nodeType":"157","endLine":443,"endColumn":62},{"ruleId":"155","severity":1,"message":"156","line":450,"column":6,"nodeType":"157","endLine":450,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":457,"column":6,"nodeType":"157","endLine":457,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":464,"column":6,"nodeType":"157","endLine":464,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":471,"column":6,"nodeType":"157","endLine":471,"endColumn":64},{"ruleId":"155","severity":1,"message":"156","line":478,"column":6,"nodeType":"157","endLine":478,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":485,"column":6,"nodeType":"157","endLine":485,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":492,"column":6,"nodeType":"157","endLine":492,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":511,"column":9,"nodeType":"157","endLine":511,"endColumn":91},{"ruleId":"155","severity":1,"message":"156","line":534,"column":9,"nodeType":"157","endLine":534,"endColumn":91},{"ruleId":"155","severity":1,"message":"156","line":541,"column":9,"nodeType":"157","endLine":541,"endColumn":91},{"ruleId":"155","severity":1,"message":"156","line":564,"column":9,"nodeType":"157","endLine":564,"endColumn":91},{"ruleId":"139","severity":1,"message":"176","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":64,"column":7,"nodeType":"157","endLine":65,"endColumn":40},{"ruleId":"139","severity":1,"message":"177","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"173","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":13},{"ruleId":"139","severity":1,"message":"178","line":132,"column":20,"nodeType":"141","messageId":"142","endLine":132,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":139,"column":18,"nodeType":"157","endLine":139,"endColumn":68},{"ruleId":"139","severity":1,"message":"177","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"179","line":11,"column":8,"nodeType":"141","messageId":"142","endLine":11,"endColumn":16},{"ruleId":"139","severity":1,"message":"180","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":124,"column":53,"nodeType":"165","messageId":"166","endLine":124,"endColumn":55},{"ruleId":"163","severity":1,"message":"164","line":124,"column":83,"nodeType":"165","messageId":"166","endLine":124,"endColumn":85},{"ruleId":"167","severity":1,"message":"168","line":139,"column":33,"nodeType":"169","messageId":"170","endLine":139,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":191,"column":73,"nodeType":"165","messageId":"166","endLine":191,"endColumn":75},{"ruleId":"163","severity":1,"message":"164","line":191,"column":112,"nodeType":"165","messageId":"166","endLine":191,"endColumn":114},{"ruleId":"155","severity":1,"message":"156","line":242,"column":14,"nodeType":"157","endLine":243,"endColumn":47},{"ruleId":"155","severity":1,"message":"156","line":258,"column":14,"nodeType":"157","endLine":258,"endColumn":64},{"ruleId":"143","replacedBy":"181"},{"ruleId":"145","replacedBy":"182"},{"ruleId":"139","severity":1,"message":"177","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"183","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":12},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'CONFIG' is defined but never used.","'sample' is assigned a value but never used.","'RecipeHeader' is defined but never used.","'veganIcon' is defined but never used.","no-dupe-keys","Duplicate key 'gridCenter'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","'id' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'amounts' is assigned a value but never used.","Duplicate key 'animateScale'.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'backgroundArray' is assigned a value but never used.","'CheckBox' is defined but never used.","'Component' is defined but never used.","'theme' is assigned a value but never used.","'LogoIcon' is defined but never used.","'dashboardBackground' is defined but never used.",["184"],["185"],"'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]