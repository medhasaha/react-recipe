[{"D:\\My Projects\\react-recipe\\client\\src\\index.js":"1","D:\\My Projects\\react-recipe\\client\\src\\Components\\App.js":"2","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeSearch.js":"3","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeDetails.js":"4","D:\\My Projects\\react-recipe\\client\\src\\ServiceClass.js":"5","D:\\My Projects\\react-recipe\\client\\src\\Components\\NavBar.js":"6","D:\\My Projects\\react-recipe\\client\\src\\Config.js":"7","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeCard.js":"8","D:\\My Projects\\react-recipe\\client\\src\\Components\\NutritionChart.js":"9","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipesHome.js":"10","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeHeader.js":"11","D:\\My Projects\\react-recipe\\client\\src\\Components\\LogIn.js":"12","D:\\My Projects\\react-recipe\\client\\src\\Components\\SignUp.js":"13","D:\\My Projects\\react-recipe\\client\\src\\Components\\Dashboard.js":"14","D:\\My Projects\\react-recipe\\client\\src\\Components\\theme.js":"15","D:\\My Projects\\react-recipe\\client\\src\\Components\\DrawerJSX.js":"16"},{"size":1178,"mtime":1613578021849,"results":"17","hashOfConfig":"18"},{"size":1297,"mtime":1612609207961,"results":"19","hashOfConfig":"18"},{"size":8909,"mtime":1613231499047,"results":"20","hashOfConfig":"18"},{"size":15989,"mtime":1613676598827,"results":"21","hashOfConfig":"18"},{"size":11943,"mtime":1613315766939,"results":"22","hashOfConfig":"18"},{"size":3850,"mtime":1613045969038,"results":"23","hashOfConfig":"18"},{"size":2190,"mtime":1613310838066,"results":"24","hashOfConfig":"18"},{"size":10771,"mtime":1613577726353,"results":"25","hashOfConfig":"18"},{"size":2276,"mtime":1612717342292,"results":"26","hashOfConfig":"18"},{"size":24916,"mtime":1613577854451,"results":"27","hashOfConfig":"18"},{"size":3292,"mtime":1612621953123,"results":"28","hashOfConfig":"18"},{"size":4956,"mtime":1613067522089,"results":"29","hashOfConfig":"18"},{"size":7645,"mtime":1612111163056,"results":"30","hashOfConfig":"18"},{"size":11797,"mtime":1613414380046,"results":"31","hashOfConfig":"18"},{"size":377,"mtime":1611859029298,"results":"32","hashOfConfig":"18"},{"size":9179,"mtime":1613577618569,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1vme7p3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"36"},"D:\\My Projects\\react-recipe\\client\\src\\index.js",[],["80","81"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\App.js",["82"],"import React from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport RecipesHome from './RecipesHome.js'\r\nimport RecipeSearch from './RecipeSearch.js'\r\nimport RecipeDetails from './RecipeDetails.js'\r\nimport LogIn from './LogIn.js'\r\nimport SignUp from './SignUp.js'\r\nimport Dashboard from './Dashboard.js'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div>\r\n          {/*<Route exact path=\"/\">\r\n            <Redirect to=\"/recipe/home\" />\r\n          </Route>*/}\r\n          <Route path=\"/recipe/home\" render={(props) => <RecipesHome {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/search-results\" render={(props) => <RecipeSearch {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/details/:id\" render={(props) => <RecipeDetails {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/login\" render={(props) => <LogIn {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/signup\" render={(props) => <SignUp {...props} baseURL={\"/recipe\"} />} />\r\n          <Route path=\"/recipe/dashboard\" render={(props) => <Dashboard {...props} baseURL={\"/recipe\"} />} />\r\n        </div>\r\n      </BrowserRouter>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeSearch.js",["83","84"],"import React, {Component} from 'react';\r\nimport {recipeSearchAPI} from '../ServiceClass.js'\r\nimport RecipeCard from './RecipeCard.js';\r\nimport CONFIG from '../Config.js';\r\nimport NavBar from './NavBar.js';\r\nimport DrawerJSX from './DrawerJSX';\r\nimport queryString from \"query-string\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst sample = {\r\n\t\"results\": [\r\n\t{\r\n\t\"id\": 1161745,\r\n\t\"title\": \"Cake Balls\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1161745-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636754,\r\n\t\"title\": \"Cake De Naranja\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636754-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 1499853,\r\n\t\"title\": \"Cake Mix Donuts\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1499853-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636756,\r\n\t\"title\": \"Cake Batter Chocolates\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636756-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636768,\r\n\t\"title\": \"Cake with wine and olive oil\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636768-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 1025438,\r\n\t\"title\": \"Cake Mix Cookie Bars Brownie\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/1025438-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 636766,\r\n\t\"title\": \"Cake with lemon, rosewater and pistachios\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/636766-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 641745,\r\n\t\"title\": \"Dump Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/641745-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 656444,\r\n\t\"title\": \"Plum Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/656444-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 654018,\r\n\t\"title\": \"Oreo Cake\",\r\n\t\"image\": \"https://spoonacular.com/recipeImages/654018-312x231.jpg\",\r\n\t\"imageType\": \"jpg\"\r\n\t}\r\n\t],\r\n\t\"offset\": 0,\r\n\t\"number\": 10,\r\n\t\"totalResults\": 453\r\n\t}\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.65)\",\r\n\t\t// backgroundColor: \"#212121\",\r\n\t\tdisplay : \"flex\",\r\n\t},\r\n\theader : {\r\n\t\tmargin : \"104px 60px 0px 300px\", \r\n\t},\r\n\toverlay : {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\talignItems : \"center\",\r\n\t\t\tjustifyContent : \"center\",\r\n\t\t\tdisplay : \"flex\",\r\n\t},\r\n\theaderTitle : {\r\n\t\t// color : \"#fff\",\r\n\t\t// fontFamily : \"Oleo Script Swash Caps\"\r\n\t},\r\n\tdrawer : {\r\n\t\twidth : \"220px\",\r\n\t},\r\n\tdrawerPaper : {\r\n\t\twidth : \"220px\",\r\n\t\tborder : \"none\",\r\n\t\tmarginTop : \"104px\",\r\n\t\tpaddingLeft : \"20px\",\r\n\t\tbackground : \"transparent\",\r\n\t\t\"&::-webkit-scrollbar\" : {\r\n\t\t\twidth: \"0.3em\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-track\" : {\r\n\t\t\tboxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-thumb\" : {\r\n\t\t\tbackgroundColor: \"darkgrey\",\r\n\t\t\toutline: \"1px solid slategrey\",\r\n\t\t}\r\n\t},\r\n\tdrawerContainer : {\r\n\r\n\t}\r\n})\r\n\r\nclass RecipeSearch extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"RecipeSearch: \",props)\r\n\t\tlet query_string = queryString.parse(props.location.search)\r\n\t\tthis.state = {\r\n\t\t\tresults : [],\r\n\t\t\tisLoaded : false,\r\n\t\t\tquery : query_string.query || \"\",\r\n\t\t\tselectedCuisine : query_string.cuisine || \"\",\r\n\t\t\tselectedDiet : query_string.diet || \"\",\r\n\t\t\tselectedTolerance : query_string.intolerances || \"\",\r\n\t\t\tselectedMealType : query_string.mealType || \"\",\r\n\t\t\tsortParameter : query_string.sortParameter || \"\",\r\n\t\t\tnumber : query_string.number || 20,\r\n\t\t\toffset : query_string.offset || 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tif (this.props && this.props.location && this.props.location.state && this.props.location.state.data) {\r\n\t\t\tlet query_string = queryString.parse(this.props.location.search)\r\n      this.setState({\r\n        results: this.props.location.state.data.results && this.props.location.state.data.results,\r\n\t\t\t\tquery : query_string.query || \"\",\r\n\t\t\t\tselectedCuisine : query_string.cuisine || \"\",\r\n\t\t\t\tselectedDiet : query_string.diet || \"\",\r\n\t\t\t\tselectedTolerance : query_string.intolerances || \"\",\r\n\t\t\t\tselectedMealType : query_string.mealType || \"\",\r\n\t\t\t\tsortParameter : query_string.sortParameter || \"\",\r\n\t\t\t\tnumber : query_string.number || 20,\r\n\t\t\t\toffset : query_string.offset || 0,\r\n        isLoaded: true\r\n      });\r\n    } else {\r\n\t\t\tthis.searchRecipes(this.state.query, 20, 0, this.state.selectedCuisine, this.state.selectedDiet, this.state.selectedTolerance, this.state.selectedMealType, this.state.sortParameter);\r\n\t\t}\r\n\t\t// this.setState({\r\n\t\t// \tresults : sample.results,\r\n\t\t// \tisLoaded : true\r\n\t\t// })\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.location.search !== this.props.location.search){\r\n\t\t\tlet currentQuery = queryString.parse(this.props.location.search);\r\n      this.setState({ \r\n\t\t\t\tquery : currentQuery.query || \"\",\r\n\t\t\t\tselectedCuisine : currentQuery.cuisine || \"\",\r\n\t\t\t\tselectedDiet : currentQuery.diet || \"\",\r\n\t\t\t\tselectedTolerance : currentQuery.intolerances || \"\",\r\n\t\t\t\tselectedMealType : currentQuery.mealType || \"\",\r\n\t\t\t\tsortParameter : currentQuery.sortParameter || \"\",\r\n\t\t\t\tnumber : currentQuery.number || 20,\r\n\t\t\t\toffset : currentQuery.offset || 0,\r\n\t\t\t\tisLoaded: true\r\n\t\t\t}, () => {\r\n        this.searchRecipes(this.state.query, 20, 0, this.state.selectedCuisine, this.state.selectedDiet, this.state.selectedTolerance, this.state.selectedMealType, this.state.sortParameter);\r\n\t\t\t});\r\n    }\r\n\t}\r\n\r\n\tsearchRecipes = (query, number, offset, cuisine = \"\", diet = \"\", intolerances = \"\", mealType = \"\", sort = \"\") => {\r\n\t\trecipeSearchAPI(query, number, offset, cuisine, diet, intolerances, mealType, sort)\r\n\t\t.then(res => {\r\n\t\t\t// console.log(res)\r\n\t\t\tthis.setState({\r\n\t\t\t\tresults : res.results,\r\n\t\t\t\tisLoaded : true\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.history.replace(\r\n\t\t\t\t\t`${this.props.history.location.pathname}?query=${this.state.query}&cuisine=${this.state.selectedCuisine}&diet=${this.state.selectedDiet}&intolerances=${this.state.selectedTolerance}&mealType=${this.state.selectedMealType}&sortParameter=${this.state.sortParameter}&number=${this.state.number}&offset=${this.state.offset}`,\r\n\t\t\t\t\t{ data: { results: res.results } });\r\n\t\t\t})\r\n\t\t}).catch(err => console.log(err))\r\n\t}\r\n\r\n\tredirectToRecipeDetails = (id) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/details/${id}`,\r\n\t\t});\r\n\t}\r\n\r\n\tapplyFilter = (values) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedCuisine : values.selectedCuisine.join(),\r\n\t\t\tselectedDiet : values.selectedDiet.join(),\r\n\t\t\tselectedTolerance : values.selectedIntolerance.join(),\r\n\t\t\tselectedMealType : values.selectedMealType.join()\r\n\t\t}, () => {\r\n\t\t\tthis.props.history.replace(\r\n\t\t\t\t`${this.props.history.location.pathname}?query=${this.state.query}&cuisine=${this.state.selectedCuisine}&diet=${this.state.selectedDiet}&intolerances=${this.state.selectedTolerance}&mealType=${this.state.selectedMealType}&sortParameter=${this.state.sortParameter}&number=${this.state.number}&offset=${this.state.offset}`);\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t  <Grid container className = {classes.root}>\r\n\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<NavBar home = {true}/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.header}>\r\n\t\t\t\t\t\t<Typography variant = \"h6\" className = {classes.headerTitle}>\r\n\t\t\t\t\t\t\t{\"Recipes For \" + this.state.query}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t      </Grid>\r\n\r\n\t\t\t\t  <Grid item xs = {12} style = {{margin : \"30px 60px 0px 300px\"}}>\r\n\t\t\t\t\t{this.state.isLoaded && this.state.results.length > 0 &&\r\n\t\t\t\t\t\t<Grid container className = {classes.root} spacing = {4}>\r\n\t\t\t\t\t\t\t{this.state.results.map(item => (\r\n\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t<RecipeCard id = {item.id} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage = {item.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// image = {CONFIG.IMAGE_URL_RECIPE + item.id + \"-480x360.jpg\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle = {item.title} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// servings = {item.servings}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// time = {item.readyInMinutes}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboxShadow = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tredirectToRecipeDetails = {this.redirectToRecipeDetails}/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Drawer className={classes.drawer} variant=\"persistent\" open = {true} classes={{ paper: classes.drawerPaper,}}>\r\n\t\t\t\t\t\t<div className={classes.drawerContainer}>\r\n\t\t\t\t\t\t\t<DrawerJSX applyFilter = {this.applyFilter} \t\r\n\t\t\t\t\t\t\t           selectedCuisine = {this.state.selectedCuisine.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedDiet = {this.state.selectedDiet.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedTolerance = {this.state.selectedTolerance.split(\",\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t selectedMealType = {this.state.selectedMealType.split(\",\")}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Drawer>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(RecipeSearch);","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeDetails.js",["85","86","87","88","89","90","91","92","93","94"],"D:\\My Projects\\react-recipe\\client\\src\\ServiceClass.js",[],"D:\\My Projects\\react-recipe\\client\\src\\Components\\NavBar.js",["95"],"import React, {Component} from 'react';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LogoIcon from '../Assets/Icons/Logo.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tflexGrow : \"1\"\r\n\t},\r\n\tappBar : {\r\n\tcolor: \"#fff\",\r\n\tposition : \"fixed\",\r\n\tzIndex : \"1400\"\r\n\t// backgroundColor: \"#0d1010\",\r\n    // backgroundColor: \"#932432\",\r\n\t},\r\n\ttitle: {\r\n\t\tpadding : \"0px 20px 0px 0px\",\r\n\t\tmargin : \"0px 20px 0px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\"\r\n\t\t// borderRight : \"2px solid white\",\r\n\t},\r\n\tappBarItems : {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"32px\", \r\n\t\twidth : \"32px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n\tsearch: {\r\n\t\tposition: 'relative',\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.15)\",\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: \"rgba(255, 255, 255, 0.25);\",\r\n\t\t},\r\n\t\tmarginLeft: 0,\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tmarginLeft: \"8px\",\r\n\t\t\twidth: 'auto',\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: \"0px 16px\",\r\n\t\theight: '100%',\r\n\t\tposition: 'absolute',\r\n\t\tpointerEvents: 'none',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n\t\tpadding : \"8px 8px 8px 0px\",\r\n    transition : \"width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    paddingLeft : \"calc(1em + 32px)\",\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n\t},\r\n\tlogin : {\r\n\t\t// padding : \"0px 0px 0px 20px\",\r\n\t\tmargin : \"0px 0px 0px 20px\",\r\n\t\t// borderRight : \"2px solid white\",\r\n\t\tcolor : \"#932432\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t\t// backgroundColor : \"#932432\"\r\n\t}\r\n})\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props){\r\n\t\t// console.log(props)\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\tgetToken = () => {\r\n\t\tconst tokenString = sessionStorage.getItem('session');\r\n\t\tconst userToken = JSON.parse(tokenString);\r\n\t\t// console.log(\"NavBar\", userToken ? true : false)\r\n\t\treturn userToken ? true : false\r\n\t}\r\n\r\n\tredirect = () => {\r\n\t\tlet isUserLoggedIn = this.getToken() ;\r\n\t\tisUserLoggedIn \r\n\t\t? this.props.history.push({\r\n\t\t\t\tpathname: `/recipe/dashboard`,\r\n\t\t\t})\r\n\t\t: this.props.history.push({\r\n\t\t\t\tpathname: `/recipe/login`,\r\n\t\t\t});\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\tlet isUserLoggedIn = this.getToken() ;\r\n\t\treturn(\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<AppBar position=\"static\" className = {classes.appBar} style = {{backgroundColor : this.props.home === true ? \"#0d1010\" : \"#932432\"}}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t  <div>\r\n\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h4\" noWrap>\r\n\t\t\t\t\t\t\t\tRecipe \t<img src = {LogoIcon} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = {classes.appBarItems}>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBase placeholder=\"Search…\"\r\n\t\t\t\t\t\t\t\tclasses={{ root: classes.inputRoot, input: classes.inputInput, }}\r\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button className = {classes.login} variant=\"outlined\" noWrap\r\n\t\t\t\t\t\t\t        onClick = {this.redirect}>\r\n\t\t\t\t\t\t\t  {\tisUserLoggedIn ? \"Dashboard\" : \"Login/ Signup\"}\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(withStyles(style, {withTheme: true})(NavBar));","D:\\My Projects\\react-recipe\\client\\src\\Config.js",["96","97"],"// const BASE_URL = \"https://api.spoonacular.com\"\r\nconst BASE_URL_RECIPE = \"/recipes\"\r\nconst BASE_URL_USER = \"/user\"\r\nconst SPLASH_URL = \"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\";\r\nlet id = 1;\r\nconst IMAGE_URL_RECIPE = \" https://spoonacular.com/recipeImages/\";\r\nconst IMAGE_URL_PRODUCT = \"https://spoonacular.com/productImages/\";\r\nconst IMAGE_URL_INGREDIENT = \"https://spoonacular.com/cdn/ingredients\"\r\nconst IMAGE_URL_EQUIPMENT = \"https://spoonacular.com/cdn/equipment\"\r\n\r\nconst RECIPE_SEARCH_URL = BASE_URL_RECIPE + `/getRecipes`;\r\nconst INGREDIENT_SEARCH = BASE_URL_RECIPE + `/recipes/findByIngredients`\r\nconst RECIPE_DETAILS_URL = BASE_URL_RECIPE + `/getRecipeDetails`;\r\nconst SIMILAR_RECIPES_URL = BASE_URL_RECIPE + `/getSimilarRecipes`;\r\nconst RANDOM_RECIPES = BASE_URL_RECIPE + `/getRandomRecipes`;\r\nconst RECIPES_AUTOCOMPLETE = BASE_URL_RECIPE + `/recipeAutocomplete`;\r\nconst RECIPE_EQUIPMENTS = BASE_URL_RECIPE + `/getRecipeEquipments`;\r\n\r\nconst LOGIN_URL = BASE_URL_USER + `/login`;\r\nconst SIGNUP_URL = BASE_URL_USER + `/signup`;\r\nconst DASHBOARD_URL = BASE_URL_USER + `/dashboard`;\r\nconst USER_URL =  BASE_URL_USER + `/user`\r\nconst CREATE_COOKBOOK_URL =  BASE_URL_USER + `/createCookbook`;\r\nconst CHANGE_COOKBOOK_URL =  BASE_URL_USER + `/changeCookbook`;\r\nconst CHANGE_COOKBOOK_NAME_URL =  BASE_URL_USER + `/changeCookbookName`;\r\nconst DELETE_COOKBOOK_URL = BASE_URL_USER + `/deleteCookbook`;\r\nconst GET_BOOKMARKED_RECIPES_URL =  BASE_URL_USER + `/getBookmarkedRecipes`\r\nconst BOOKMARK_RECIPE_URL =  BASE_URL_USER + `/bookmarkRecipe`\r\nconst DELETE_BOOKMARK_URL =  BASE_URL_USER + `/deleteBookmark`\r\n\r\n\r\nexport default {\r\n\tRECIPES_AUTOCOMPLETE,\r\n    RECIPE_SEARCH_URL,\r\n    INGREDIENT_SEARCH,\r\n\tRECIPE_DETAILS_URL,\r\n\tSIMILAR_RECIPES_URL,\r\n\tRANDOM_RECIPES,\r\n\tRECIPE_EQUIPMENTS,\r\n\tSPLASH_URL,\r\n\tIMAGE_URL_RECIPE,\r\n\tIMAGE_URL_PRODUCT,\r\n\tIMAGE_URL_INGREDIENT,\r\n\tIMAGE_URL_EQUIPMENT,\r\n\tLOGIN_URL,\r\n\tSIGNUP_URL,\r\n\tDASHBOARD_URL,\r\n\tUSER_URL,\r\n\tCREATE_COOKBOOK_URL,\r\n\tGET_BOOKMARKED_RECIPES_URL,\r\n\tBOOKMARK_RECIPE_URL,\r\n\tDELETE_BOOKMARK_URL,\r\n\tCHANGE_COOKBOOK_URL,\r\n\tCHANGE_COOKBOOK_NAME_URL,\r\n\tDELETE_COOKBOOK_URL\r\n};","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeCard.js",["98","99","100","101","102"],"import React, {Component} from 'react';\r\nimport {bookmarkRecipeAPI, getBookmarkedRecipesAPI, changeCookbookAPI, deleteBookmarkAPI} from '../ServiceClass.js'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport BookmarkEmptyIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkFilledIcon from '@material-ui/icons/Bookmark';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport Cookbook from '../Assets/Icons/Cookbook.svg'\r\nimport CookbookColored from '../Assets/Icons/CookbookColored.svg';\r\n\r\nconst style = theme => ({\r\n\tcard : {\r\n\t\theight : \"215px\",\r\n\t\twidth : \"100%\",\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tboxShadow : \"none\"\r\n\t},\r\n\timage : {\r\n\t\twidth : \"100%\",\r\n\t\theight : \"180px\",\r\n\t\tobjectFit : \"cover\",\r\n\t\tobjectPosition : \"center center\",\r\n\t\tborderBottom : \"6px solid #932432\"\r\n\t},\r\n\ttitleDiv : {\r\n\t\tposition : \"absolute\", \r\n\t\tleft : 0, \r\n\t\tbottom : 0, \r\n\t\tmaxWidth : \"160px\",\r\n\t\tpadding : \"0px 10px 0px 10px\", \r\n\t\tbackgroundColor : \"#932432\",\r\n\t\tborderRadius : \"0px\"\r\n\t},\r\n\ttitle : {\r\n\t\tmargin : \"5px 0px 5px 0px\",\r\n\t\t// marginBottom : \"10px\",\r\n\t\tlineHeight: \"1.3rem !important\",\r\n\t\ttextOverflow: \"ellipsis\",\r\n\t\toverflow: \"hidden\",\r\n\t\t\"-webkit-line-clamp\": 1,\r\n\t\t\"-webkit-box-orient\": \"vertical\",\r\n\t\tmaxHeight: \"1.5rem\",\r\n\t\tdisplay: \"-webkit-box\",\r\n\t\tcursor : \"pointer\",\r\n\t\ttextTransform : \"capitalize\",\r\n\t\t// color : \"#932432\",\r\n\t\tcolor : \"#fff\",\r\n\t\tfontSize : \"15px\"\r\n\t},\r\n\tsecondaryText : {\r\n\t\tcursor : \"pointer\",\r\n\t\tdisplay : \"inline\",\r\n\t\tfontSize : \"17px\"\r\n\t},\r\n\tbookmarkIcon : {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: \"10px\",\r\n\t\tright : \"10px\",\r\n\t\tfontSize : \"40px\",\r\n\t\tcolor : \"white\",\r\n\t\tcursor : \"pointer\",\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.5)\",\r\n\t},\r\n\tcookbookCard : {\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tboxShadow : \"none\",\r\n\t\t// padding : \"20px 0px\",\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tgridCenter : {\r\n  \talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"70px\",\r\n\t\twidth : \"70px\",\r\n\t},\r\n\tdialog : {\r\n\t\theight : \"auto\",\r\n\t\tmaxHeight : \"50%\",\r\n\t\twidth : \"40%\",\r\n\t\tpadding : \"20px\",\r\n\t\t\"&::-webkit-scrollbar\" : {\r\n\t\t\twidth: \"0.3em\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-track\" : {\r\n\t\t\tboxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\r\n\t\t},\r\n\t\t\"&::-webkit-scrollbar-thumb\" : {\r\n\t\t\tbackgroundColor: \"darkgrey\",\r\n\t\t\toutline: \"1px solid slategrey\",\r\n\t\t}\r\n\t},\r\n\tdeleteButton : {\r\n\t\tcolor : \"#932432\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t\tfloat : \"right\"\r\n\t}\r\n})\r\n\r\nclass RecipeCard extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"RecipeCard: \",props)\r\n\t\tconst recipes = sessionStorage.getItem('recipes');\r\n\t\tconst savedRecipes = JSON.parse(recipes)\r\n\t\tlet isBookmarked = savedRecipes && savedRecipes.length > 0 && savedRecipes.includes(props.id) || false;\r\n\t\tthis.state = {\r\n\t\t\tresults : [],\r\n\t\t\tisLoaded : false,\r\n\t\t\tisBookmarked : isBookmarked,\r\n\t\t\topenDialog : false,\r\n\t\t\tactiveID : \"\",\r\n\t\t\tallCookbooks : [],\r\n\t\t\topenSuccessSnackbar : false,\r\n\t\t\tsuccessMessage : \"\",\r\n\t\t\topenErrorSnackbar : false,\r\n\t\t\terrorMesssage : \"\",\r\n\t\t}\r\n\t}\r\n\r\n\tbookmarkClickHandler = () => {\r\n\t\tif (this.state.isBookmarked){\r\n\t\t\tconst cookbooks = sessionStorage.getItem('cookbooks');\r\n\t\t\tconst allCookbooks = JSON.parse(cookbooks) || [];\r\n\t\t\tlet cookbookIDsArray = [];\r\n\t\t\tallCookbooks.map(item =>{ cookbookIDsArray.push(item.cookbook_id) })\r\n\t\t\tlet cookbookIds = cookbookIDsArray.join()\r\n\t\t\tgetBookmarkedRecipesAPI(cookbookIds)\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet selectedCookbook = \"\";\r\n\t\t\t\tfor(let i = 0 ; i < cookbookIDsArray.length ; i++ ){\r\n\t\t\t\t\tlet ck = res[cookbookIDsArray[i]];\r\n\t\t\t\t\tfor(let j = 0 ; j < ck.length ; j++){\r\n\t\t\t\t\t\tlet r = ck[j];\r\n\t\t\t\t\t\tif (r.recipe_id === this.props.id){\r\n\t\t\t\t\t\t\tselectedCookbook = cookbookIDsArray[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(selectedCookbook) break;\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t// isBookmarked : !(this.state.isBookmarked)\r\n\t\t\t\t\tactiveID : selectedCookbook,\r\n\t\t\t\t\topenDialog : true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\topenDialog : true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\taddBookmark = (cookbook_id) => {\r\n\t\tbookmarkRecipeAPI(cookbook_id, this.props.id, this.props.title, \"jpg\")\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tconst r = sessionStorage.getItem('recipes');\r\n\t\t\t\tconst r_arr = JSON.parse(r)\r\n\t\t\t\tconst recipes = [...r_arr];\r\n\t\t\t\trecipes.push(this.props.id);\r\n\t\t\t\tsessionStorage.setItem('recipes', JSON.stringify(recipes));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisBookmarked : true,\r\n\t\t\t\t\tactiveID : cookbook_id,\r\n\t\t\t\t\topenDialog : false,\r\n\t\t\t\t\topenSuccessSnackbar : true,\r\n\t\t\t\t\tsuccessMessage : \"Bookmark added Successfully!\"\r\n\t\t\t\t})\r\n\t\t\t}else if(res.err){\r\n\t\t\t\tif(res.errCode === \"UNAUTHORIZED\"){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\t\terrorMessage : \"User Not Logged In!\"\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\t\terrorMessage : \"Error In Adding Bookmark. Try Again!\"\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tchangeCookbook = (cookbook_id) => {\r\n\t\tchangeCookbookAPI(cookbook_id, this.props.id)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tactiveID : cookbook_id,\r\n\t\t\t\t\topenSuccessSnackbar : true,\r\n\t\t\t\t\tsuccessMessage : \"Cookbook Changed!\"\r\n\t\t\t\t}, () => {this.props.callApi && this.props.callApi()})\r\n\t\t\t}else\tif(res.errCode === \"UNAUTHORIZED\"){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\terrorMessage : \"User Not Logged In!\"\r\n\t\t\t\t})\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\terrorMessage : \"Error In Changing Cookbook. Try Again!\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteBookmark = (cookbook_id) => {\r\n\t\tdeleteBookmarkAPI(cookbook_id, this.props.id)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tconst r = sessionStorage.getItem('recipes');\r\n\t\t\t\tconst r_arr = JSON.parse(r)\r\n\t\t\t\tconst oldRecipes = [...r_arr];\r\n\t\t\t\tconst newRecipes = oldRecipes.filter(i => i !== this.props.id);\r\n\t\t\t\tsessionStorage.setItem('recipes', JSON.stringify(newRecipes));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisBookmarked : false,\r\n\t\t\t\t\tactiveID : \"\",\r\n\t\t\t\t\topenDialog : false,\r\n\t\t\t\t\topenSuccessSnackbar : true,\r\n\t\t\t\t\tsuccessMessage : \"Bookmark Deleted Successfully!\"\r\n\t\t\t\t}, () => {this.props.callApi && this.props.callApi()})\r\n\t\t\t}else\tif(res.errCode === \"UNAUTHORIZED\"){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\terrorMessage : \"User Not Logged In!\"\r\n\t\t\t\t})\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\topenErrorSnackbar : true,\r\n\t\t\t\t\terrorMessage : \"Error In Deleting Bookmark. Try Again!\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcookbookClickHandler = (cookbook_id) => {\r\n\t\tif (this.state.isBookmarked){//change cookbook for recipe\r\n      this.changeCookbook(cookbook_id)\r\n\t\t}else{//bookmark the recipe for first time\r\n\t\t\tthis.setState({\r\n\t\t\t\tactiveID : cookbook_id\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tdialogJSX = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst ck = sessionStorage.getItem('cookbooks');\r\n\t\tconst cookbooks = JSON.parse(ck) || []\r\n\t\treturn(\r\n\t\t\t<Grid container spacing = {4}>\r\n\t\t\t  <Grid item xs = {12}>\r\n\t\t\t\t\t<Typography variant = \"h6\">{this.state.isBookmarked ? \"Change Cookbook\" : \"Choose Cookbook\"}</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{cookbooks.length > 0 && cookbooks.map(item => (\r\n\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t<Card className = {classes.cookbookCard} onClick = {() => {this.cookbookClickHandler(item.cookbook_id)}}>\r\n\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t<img src = {item.cookbook_id === this.state.activeID ? CookbookColored : Cookbook} \r\n\t\t\t\t\t\t\t\t\t\tclassName = {classes.logo}/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.cookbookName}>\r\n\t\t\t\t\t\t\t\t\t{item.cookbook_name}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t  {this.state.isBookmarked \r\n\t\t\t\t\t  ? <Button variant = \"oulined\" className = {classes.deleteButton} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {this.deleteBookmark(this.state.activeID)}}\r\n\t\t\t\t\t\t\t\t\t\t\tenabled = {this.state.isBookmarked}>\r\n\t\t\t\t\t\t\t\tDelete Bookmark\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t  : <Button variant = \"oulined\" className = {classes.deleteButton} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {this.addBookmark(this.state.activeID)}}\r\n\t\t\t\t\t\t\t\t\t\t\tenabled = {this.state.isBookmarked}>\r\n\t\t\t          Add Bookmark\r\n\t\t          </Button>}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card className = {classes.card} \r\n\t\t\t\t\t\t\tstyle = {{position : \"relative\"}}>\r\n\t\t\t\t\t<img className={classes.image} src = {this.props.image}/>\r\n\t\t\t\t\t<Grid container style = {{margin : \"10px\", width : \"auto\"}}>\r\n\t\t\t\t\t\t<div className = {classes.titleDiv} style = {{maxWidth : this.props.maxSize ? this.props.maxSize : \"160px\"}}>\r\n\t\t\t\t\t\t\t<Typography variant = \"h6\" className = {classes.title} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => this.props.redirectToRecipeDetails(this.props.id)}>\r\n\t\t\t\t\t\t\t\t{this.props.title}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<BookmarkEmptyIcon className = {classes.bookmarkIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {this.bookmarkClickHandler} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{display : this.state.isBookmarked ? \"none\" : \"block\"}}/>\r\n\t\t\t\t\t<BookmarkFilledIcon className = {classes.bookmarkIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {this.bookmarkClickHandler} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{display : this.state.isBookmarked ? \"block\" : \"none\"}}/>\r\n\t\t\t\t</Card>\t\r\n\r\n\t\t\t\t<Dialog classes = {{paper : classes.dialog}}\r\n\t\t\t\t        onClose={() => { this.setState({openDialog : false}) }} \r\n\t\t\t\t        open={this.state.openDialog}>\r\n\t\t\t\t\t{this.dialogJSX()}\r\n\t\t\t  </Dialog>\r\n\r\n\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n\t\t\t\t\t\t      open={this.state.openSuccessSnackbar} autoHideDuration={5000}\r\n\t\t\t\t\t\t      onClose={() => {\tthis.setState({openSuccessSnackbar : false}) }}>\r\n\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#4caf50', color : \"#fff\"}}\r\n\t\t\t\t\t\t               message = {this.state.successMessage}/>\r\n\t\t\t\t</Snackbar>\r\n\r\n\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center',}}\r\n\t\t\t\t\t\t\t\t\topen={this.state.openErrorSnackbar} autoHideDuration={3000} \r\n\t\t\t\t\t\t\t\t\tonClose={() => { \tthis.setState({openErrorSnackbar : false}) }}>\r\n\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#f44336', color : \"#fff\"}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={this.state.errorMessage}/>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(RecipeCard);","D:\\My Projects\\react-recipe\\client\\src\\Components\\NutritionChart.js",["103","104","105","106"],"import React, {Component} from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst style = theme => ({\r\n\r\n})\r\n\r\nclass Recipes extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"Nutrition Charts\",this.props)\r\n\t\tlet percentage = [], amounts = [], labels = [];\r\n\t\tthis.props.data.map(item =>{\r\n\t\t\tpercentage.push(item.percentOfDailyNeeds)\r\n\t\t\t// amounts.push(item.amount + \" \" + item.unit)\r\n\t\t\tlabels.push(item.name + \" (\" + item.amount + \" \" + item.unit + \") \")\r\n\t\t})\r\n\r\n\t\tlet letters = '0123456789ABCDEF'.split('');\r\n\t\tlet colorArr = []\r\n\t\tfor(let i = 0; i < percentage.length ; i++ ){\r\n\t\t  let color = '#';\r\n\t\t\tfor (let j = 0; j < 6; j++ ) {\r\n\t\t\t\tcolor += letters[Math.floor(Math.random() * 16)];\r\n\t\t\t}\r\n\t\t\tcolorArr.push(color)\r\n\t  }\r\n\r\n    let chartData = {\r\n      labels: labels,\r\n      datasets:\r\n        [{\r\n          type: 'doughnut',\r\n          label: labels,\r\n          data: percentage,\r\n          borderWidth: 1,\r\n          backgroundColor: colorArr,\r\n          borderColor: \"white\",\r\n          hoverBorderColor: 'fff',\r\n        }]\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tchartData : chartData\r\n\t\t}\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t  <div style = {{marginTop : \"60px\"}}>\r\n\t\t\t\t<Doughnut data = {this.state.chartData}\r\n\t\t\t\t\ttype=\"doughnut\"\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t// responsive: true,\r\n\t\t\t\t\t\t// maintainAspectRatio: false,\r\n\t\t\t\t\t\taspectRatio : 3,\r\n\t\t\t\t\t\tsegmentShowStroke : true,\r\n\t\t\t\t\t\tsegmentStrokeColor : \"#fff\",\r\n\t\t\t\t\t\tsegmentStrokeWidth : 2,\r\n\t\t\t\t\t\tpercentageInnerCutout : 50,\r\n\t\t\t\t\t\tanimationSteps : 100,\r\n\t\t\t\t\t\tanimationEasing : \"easeOutBounce\",\r\n\t\t\t\t\t\tanimateRotate : true,\r\n\t\t\t\t\t\tanimateScale : false,\r\n\t\t\t\t\t\tshowScale: true,\r\n\t\t\t\t\t\tanimateScale: true,\r\n\t\t\t\t\t\t// title : {\r\n\t\t\t\t\t\t// \tposition: \"top\",\r\n\t\t\t\t\t\t// \ttext: \"Nutrition Chart\",\r\n\t\t\t\t\t\t// \tdisplay: true,\r\n\t\t\t\t\t\t// \tfontSize: 18,\r\n\t\t\t\t\t\t// \tfontColor: \"#111\"\r\n\t\t\t\t\t\t// },\r\n\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\tposition: \"right\",\r\n\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\tfontColor: \"#333\",\r\n                fontSize: 14\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t  </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(Recipes);","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipesHome.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, {Component} from 'react';\r\nimport {recipeAutocompleteAPI, randomRecipeAPI, userAPI} from '../ServiceClass.js'\r\nimport NavBar from './NavBar.js'\r\nimport RecipeHeader from './RecipeHeader.js'\r\n\r\nimport background1 from '../Assets/Images/background/background1.jpg';\r\nimport background2 from '../Assets/Images/background/background2.jpg';\r\nimport background3 from '../Assets/Images/background/background3.jpg';\r\nimport background4 from '../Assets/Images/background/background4.jpg';\r\nimport background5 from '../Assets/Images/background/background5.jpg';\r\nimport background6 from '../Assets/Images/background/background6.jpg';\r\nimport background7 from '../Assets/Images/background/background7.jpg';\r\nimport background8 from '../Assets/Images/background/background8.jpg';\r\nimport background9 from '../Assets/Images/background/background9.jpg';\r\nimport background10 from '../Assets/Images/background/background10.jpg';\r\nimport background11 from '../Assets/Images/background/background11.jpg';\r\n\r\nimport meal_type_main_course from '../Assets/Images/img/meal_type_main_course.jpg';\r\nimport meal_type_dessert from '../Assets/Images/img/meal_type_dessert.jpg';\r\nimport meal_type_salad from '../Assets/Images/img/meal_type_salad.jpg';\r\nimport meal_type_breakfast from '../Assets/Images/img/meal_type_breakfast.jpg';\r\nimport meal_type_drink from '../Assets/Images/img/meal_type_drink.jpg';\r\n\r\nimport cuisine_type_american from '../Assets/Images/img/cuisine_type_american.jpg';\r\nimport cuisine_type_british from '../Assets/Images/img/cuisine_type_british.jpg';\r\nimport cuisine_type_mexican from '../Assets/Images/img/cuisine_type_mexican.jpg';\r\nimport cuisine_type_japanese from '../Assets/Images/img/cuisine_type_japanese.jpg';\r\nimport cuisine_type_indian from '../Assets/Images/img/cuisine_type_indian.jpg';\r\n\r\nimport diet_type_gluten_free from '../Assets/Images/img/diet_type_gluten_free.jpg';\r\nimport diet_type_keto from '../Assets/Images/img/diet_type_keto.jpg';\r\nimport diet_type_vegetarian from '../Assets/Images/img/diet_type_vegetarian.jpg';\r\nimport diet_type_pescetarian from '../Assets/Images/img/diet_type_pescetarian.jpg';\r\nimport diet_type_lacto_veg from '../Assets/Images/img/diet_type_lacto_veg.jpg';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst mealTypes = [\r\n\t{title : \"main course\", image : meal_type_main_course},\r\n\t{title : \"dessert\", image : meal_type_dessert},\r\n\t{title : \"salad\", image : meal_type_salad},\r\n\t{title : \"breakfast\", image : meal_type_breakfast},\r\n\t{title : \"drink\", image : meal_type_drink},\r\n]\r\n\r\nconst cuisineTypes = [\r\n\t{title : \"American\", image : cuisine_type_american},\r\n\t{title : \"British\", image : cuisine_type_british},\r\n\t{title : \"Mexican\", image : cuisine_type_mexican},\r\n\t{title : \"Japanese\", image : cuisine_type_japanese},\r\n\t{title : \"Indian\", image : cuisine_type_indian},\r\n]\r\n\r\nconst dietTypes = [\r\n\t{title : \"Gluten Free\", image : diet_type_gluten_free},\r\n\t{title : \"Ketogenic\", image : diet_type_keto},\r\n\t{title : \"Vegetarian\", image : diet_type_vegetarian},\r\n\t{title : \"Pescetarian\", image : diet_type_pescetarian},\r\n\t{title : \"Lacto-Vegetarian\", image : diet_type_lacto_veg},\r\n]\r\nconst backgroundArray = [background1, background2, background3, background4, background5, background11, background7, background8, background9];\r\n\r\nconst sample = [\r\n\t{\r\n\t\"id\": 133439,\r\n\t\"title\": \"cake\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 165381,\r\n\t\"title\": \"chai\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 495920,\r\n\t\"title\": \"cups\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 34150,\r\n\t\"title\": \"chili\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 1125636,\r\n\t\"title\": \"crema\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 102861,\r\n\t\"title\": \"cacik\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 630955,\r\n\t\"title\": \"craig\",\r\n\t\"imageType\": \"jpg\"\r\n\t},\r\n\t{\r\n\t\"id\": 117905,\r\n\t\"title\": \"champ\",\r\n\t\"imageType\": \"png\"\r\n\t},\r\n\t{\r\n\t\"id\": 234120,\r\n\t\"title\": \"calas\",\r\n\t\"imageType\": \"jpg?itok=m1zglj97\"\r\n\t},\r\n\t{\r\n\t\"id\": 376278,\r\n\t\"title\": \"clams\",\r\n\t\"imageType\": \"jpeg\"\r\n\t}\r\n\t]\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\r\n\t},\r\n\tbgGrid : {\r\n\t\ttop : \"-1px\",\r\n\t\tposition: \"relative\",\r\n\t\tmargin: \"0 auto\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"120vh\",\r\n\t},\r\n\tbgDiv : {\r\n\t\twidth : \"100%\",\r\n\t\t// height : \"100vh\",\r\n\t\topacity: 0,\r\n\t\tanimation: \"$fade-in-out 81s linear infinite\"\r\n\t},\r\n\tbgImage : {\r\n\t\twidth : \"100%\",\r\n\t\theight : \"100%\",\r\n\t\tobjectFit : \"cover\",\r\n\t\tobjectPosition : \"center center\",\r\n\t\tposition: \"absolute\",\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t},\r\n\tattribution : {\r\n\t\tposition: \"absolute\",\r\n\t\tright : 10,\r\n\t\tbottom : 0,\r\n\t\tzIndex : \"100\",\r\n\t\tcolor : \"white\",\r\n\t\ttextShadow: \"0 0 1px black, 0 0 1px black, 0 0 1px black, 0 0 1px black\"\r\n\t},\r\n\tattributionLink : {\r\n\t\ttextDecoration : \"none\",\r\n\t\tcolor : \"white\",\r\n\t\t\"&:hover\": {\r\n      textDecoration : \"underline\"\r\n    }\r\n\t},\r\n\t\"@keyframes fade-in-out\" : {\r\n\t\t\"0%\" : { opacity: 0 } ,\r\n\t\t\"01.23%\" : { opacity: 1 },\r\n\t\t\"02.46%\" : { opacity: 1 },\r\n\t\t\"03.69%\" : { opacity: 1 },\r\n\t\t\"04.92%\" : { opacity: 1 },\r\n\t\t\"06.15%\" : { opacity: 1 },\r\n\t\t\"07.38%\" : { opacity: 1 },\r\n\t\t\"08.61%\" : { opacity: 1 },\r\n\t\t\"09.84%\" : { opacity: 1 },\r\n\t\t\"19.68%\" : { opacity: 0 },\r\n\t\t\"100%\" : { opacity: 0 }\r\n\t},\r\n\tautocompleteGrid : {\r\n\t\tposition : \"absolute\",\r\n\t\ttop : \"40%\",\r\n\t},\r\n\tgridCenter : {\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tautocomplete : {\r\n\t\t// backgroundColor : \"white\",\r\n\t\tdisplay : \"inline-flex\",\r\n\t\tmargin : \"0px 2px 0px 0px\",\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.65)\",\r\n\t},\r\n\ttextField : {\r\n\t\t\"& .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#000\"//\r\n\t\t},\r\n\t\t\"&:hover .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#000\"\r\n\t\t},\r\n\t\t\"& .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#000\",//\r\n\t\t},\r\n\t\t\"&:hover .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#000\",\r\n\t\t},\r\n\t\t\"& .Mui-focused .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#000\"\r\n\t\t},\r\n\t\t\"& .Mui-focused\" : {\r\n\t\t\tcolor : \"#000\",\r\n\t\t},\r\n\t\t\"& .MuiOutlinedInput-notchedOutline\" : {\r\n\t\t\tborder : \"3px solid #fff\"//\r\n\t\t},\r\n\t\t\"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      border : \"3px solid #fff\"\r\n    },\r\n\t\t\"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      border : \"3px solid #fff\"\r\n    },\r\n\t},\r\n\tsearchButton : {\r\n\t\theight  : \"100%\",\r\n\t\tborder: \"3px solid #fff\",\r\n    backgroundColor: \"rgba(255,255,255,0.2)\",\r\n\t},\r\n\tsearchIcon : {\r\n\t\tcolor : \"white\",\r\n\t\tfontSize : \"2rem\"\r\n\t},\r\n\tfixedBg : {\r\n\t\theight : \"100vh\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t},\r\n\tscrollBg : {\r\n\t\t// height : \"100vh\",\r\n\t\tbackgroundColor : \"#f8f9fa\",\r\n\t\tpadding : \"30px 0px 30px\"\r\n\t},\r\n\trecipeImage : {\r\n\t\twidth : \"100%\",\r\n\t\theight : \"200px\",\r\n\t\tobjectFit : \"cover\",\r\n\t\tobjectPosition : \"center center\",\r\n\t\t// borderRadius : \"50%\"\r\n\t},\r\n\trecipeTitle : {\r\n\t\t// fontFamily : \"Fira Sans\",\r\n    textTransform : \"uppercase\",\r\n    width : \"60%\",\r\n    textAlign : \"center\",\r\n\t\tfontSize : \"20px\",\r\n\t\tfontWeight : \"bold\",\r\n\t\tcolor : theme.palette.text.primary,\r\n\t\tmarginTop:\"0px !important\", \r\n    lineHeight: \"1.3rem !important\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow:\"hidden\",\r\n    \"-webkit-line-clamp\": 2,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    maxHeight:\"3rem\",\r\n\t\tdisplay: \"-webkit-box\",\r\n\t},\r\n\trecipeDivider : {\r\n\t\twidth : \"20%\",\r\n\t\tbackgroundColor : \"#932432\",\r\n\t\theight : \"4px\",\r\n\t\tmarginTop : \"10px\"\r\n\t},\r\n\tgridAboutRecipe : {\r\n\t\theight : \"200px\",\r\n\t\toutline: \"2px solid #ddd\",\r\n    outlineOffset: \"-20px\",\r\n\t},\r\n\tgridTop : {\r\n\t\tdisplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n\t},\r\n\tgridBottom : {\r\n  \tdisplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n\t},\r\n\tgridTextAlign : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tgridList : {\r\n\t\tmargin : \"0px 0px 30px 0px\"\r\n\t},\r\n\tgridListTileBar : {\r\n\t\ttextTransform : \"capitalize\"\r\n\t},\r\n\tveganGrid : {\r\n\t\ttextAlign : \"center\",\r\n\t\tmarginTop : \"auto\",\r\n\t\tmarginBottom : \"auto\",\r\n\t\tmarginLeft : \"120px\",\r\n\t\tmarginRight : \"120px\"\r\n\t},\r\n\tveganTitle : {\r\n\t\tcolor : \"#fff\",\r\n\t\tmarginBottom : \"30px\"\r\n\t},\r\n\tveganSubTitle : {\r\n\t\tcolor : \"#fff\",\r\n\t\tmarginBottom : \"120px\"\r\n\t},\r\n\tveganButton : {\r\n\t\tcolor : \"#fff\",\r\n\t\tbackgroundColor : \"#932432\"\r\n\t},\r\n\tcursor : {\r\n\t\tcursor : \"pointer\"\r\n\t}\r\n})\r\n\r\nclass RecipesHome extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// console.log(\"RecipeHome :\",this.props)\r\n\t\tthis.state = {\r\n\t\t\tautocompleteOptions : [],\r\n\t\t\tvalue : \"\",\r\n\t\t\tinputValue : \"\",\r\n\t\t\tloading : false,\r\n\t\t\topen : false,\r\n\t\t\trandomRecipes : []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// this.getUserDetails();\r\n\t\tif (this.props.location && this.props.location.state && this.props.location.state.data){\r\n      this.setState({ \r\n\t\t\t\t...this.props.location.state.data,\r\n\t\t\t});\r\n    } else {\r\n\t\t\tthis.getRandomRecipe()\r\n    }\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\r\n\t}\r\n\r\n\tgetUserDetails = () => {\r\n\t\tuserAPI()\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tthis.setState({\r\n\t\t\t\tuser : res,\r\n\t\t\t})\r\n\t\t}).catch(err => console.log(err))\r\n\t}\r\n\r\n\tgetRandomRecipe = () => {\r\n\t\trandomRecipeAPI()\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tthis.setState({\r\n\t\t\t\trandomRecipes : res.recipes,\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.history.replace(this.props.history.location.pathname,\r\n\t\t\t\t\t{ data: \r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\trandomRecipes : this.state.randomRecipes,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}).catch(err => console.log(err))\r\n\t}\r\n\r\n\trecipeAutocompleteMethod = (value) => {\r\n\t\trecipeAutocompleteAPI(value)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tthis.setState({\r\n\t\t\t\tautocompleteOptions : sample,\r\n\t\t\t\tloading : false\r\n\t\t\t})\r\n\t\t}).catch(err => console.log(err))\r\n\t}\r\n\r\n\tautocompleteChangeHandler = (e, newValue) => {\r\n\t\t// console.log(\"newValue\",newValue)\r\n\t\tthis.setState({\r\n\t\t\tvalue : newValue,\r\n\t\t\tloading : this.state.open === true && this.state.autocompleteOptions.length > 0 ? true : false,\r\n\t\t})\r\n\t}\r\n\r\n\tautocompleteInputChangeHandler = (e, newInputValue) => {\r\n\t\t// console.log(\"newInputValue\",newInputValue)\r\n\t\tthis.setState({\r\n\t\t\tinputValue : newInputValue\r\n\t\t}\r\n\t\t// , () => {this.recipeAutocompleteMethod(this.state.value)}\r\n\t\t, () => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tautocompleteOptions : sample,\r\n\t\t\t\tloading : false\r\n\t\t\t})\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tredirectToSearch = (query = \"\", cuisine = \"\", diet = \"\", mealType = \"\") => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/search-results`,\r\n\t\t\tsearch: `?query=${query}&cuisine=${cuisine}&diet=${diet}&intolerances=&mealType=${mealType}&sortParameter=&number=20&offset=0`,\r\n\t\t});\r\n\t}\r\n\r\n\tredirectToDetails = (id) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/details/${id}`,\r\n\t\t});\r\n\t}\r\n\r\n\tsliderJSX = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"0s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background1} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t  Photo by <a href=\"https://unsplash.com/@brookelark?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Brooke Lark</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"9s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background2} className = {classes.bgImage}/>\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@lvnatikk?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Lily Banse</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"18s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background3} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t  Photo by <a href=\"https://unsplash.com/@therachelstory?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Rachel Park</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"27s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background4} className = {classes.bgImage} />\r\n\t\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@annapelzer?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Anna Pelzer</a> \r\n\t\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"36s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background5} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@alexmunsell?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Alex Munsell</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"45s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background11} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@society_grace?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Sarah Holcomb</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"54s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background7} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@eaterscollective?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Eaters Collective</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"63s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background8} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t\tPhoto by <a href=\"https://unsplash.com/@carissagan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Carissa Gan</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{ \"animationDelay\": \"72s\" }} className = {classes.bgDiv}>\r\n\t\t\t\t\t<img src = {background9} className = {classes.bgImage} />\r\n\t\t\t\t\t<span className = {classes.attribution}>\r\n\t\t\t\t\t  Photo by <a href=\"https://unsplash.com/@abhishek_sanwa?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Abhishek Sanwa Limbu</a> \r\n\t\t\t\t\t\t{' '} on <a href=\"https://unsplash.com/s/photos/food?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" className = {classes.attributionLink}>Unsplash</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\trecipeOfTheDay = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid container>\r\n\r\n\t\t\t\t\t<Grid container item xs = {3} className = {classes.cursor}\r\n\t\t\t\t\t      onClick = {() => {this.redirectToDetails(this.state.randomRecipes[0].id)}}>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t  <img src = {this.state.randomRecipes[0].image} className = {classes.recipeImage}/>\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container item xs = {12} className = {classes.gridAboutRecipe}>\r\n\t\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridTop}>\r\n\t\t\t\t\t\t    <Typography className = {classes.recipeTitle}>{this.state.randomRecipes[0].title}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridBottom}>\r\n\t\t\t\t\t\t\t  <Divider className = {classes.recipeDivider}/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container item xs = {3} className = {classes.cursor}\r\n\t\t\t\t\t      onClick = {() => {this.redirectToDetails(this.state.randomRecipes[1].id)}}>\r\n\t\t\t\t\t  <Grid container item xs = {12}  className = {classes.gridAboutRecipe}>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridTop}>\r\n\t\t\t\t\t\t\t\t<Typography className = {classes.recipeTitle}>{this.state.randomRecipes[1].title}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridBottom}>\r\n\t\t\t\t\t\t\t  <Divider className = {classes.recipeDivider}/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t  <img src = {this.state.randomRecipes[1].image} className = {classes.recipeImage}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container item xs = {3} className = {classes.cursor}\r\n\t\t\t\t\t      onClick = {() => {this.redirectToDetails(this.state.randomRecipes[2].id)}}>\r\n\t\t\t\t\t  <Grid item xs = {12}>\r\n\t\t\t\t\t\t  <img src = {this.state.randomRecipes[2].image} className = {classes.recipeImage}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container item xs = {12}  className = {classes.gridAboutRecipe}>\r\n\t\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridTop}>\r\n\t\t\t\t\t\t    <Typography className = {classes.recipeTitle}>{this.state.randomRecipes[2].title}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridBottom}>\r\n\t\t\t\t\t\t\t  <Divider className = {classes.recipeDivider}/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container item xs = {3} className = {classes.cursor}\r\n\t\t\t\t\t      onClick = {() => {this.redirectToDetails(this.state.randomRecipes[3].id)}}>\r\n\t\t\t\t\t  <Grid container item xs = {12}  className = {classes.gridAboutRecipe}>\r\n\t\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridTop}>\r\n\t\t\t\t\t\t    <Typography className = {classes.recipeTitle}>{this.state.randomRecipes[3].title}</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridBottom}>\r\n\t\t\t\t\t\t\t  <Divider className = {classes.recipeDivider}/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t  <img src = {this.state.randomRecipes[3].image} className = {classes.recipeImage}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t  </React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\thorizontalList = (list) => {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<GridList cellHeight={280} className={classes.gridList} cols = {5}>\r\n\t\t\t\t{list.map((tile) => (\r\n\t\t\t\t\t<GridListTile key={tile.title} className = {classes.cursor}\r\n\t\t\t\t\t              onClick = {() => {this.redirectToSearch(\"\", list === cuisineTypes ? tile.title : \"\", list === dietTypes ? tile.title : \"\", list === mealTypes ? tile.title : \"\")}}>\r\n\t\t\t\t\t\t<img src={`${tile.image}`} alt={tile.title} />\r\n\t\t\t\t\t\t<GridListTileBar title={tile.title} className = {classes.gridListTileBar}/>\r\n\t\t\t\t\t</GridListTile>\r\n\t\t\t\t))}\r\n\t\t\t</GridList>\r\n\t\t)\r\n\t}\r\n\r\n\tgetWhatsInMyFridgePanel = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Grid container style = {{height : \"100%\"}}>\r\n\t\t\t\t<Grid item xs = {12} className = {classes.veganGrid}>\r\n\t\t\t\t\t<Typography variant = \"h1\" className = {classes.veganTitle}>Whats In My Fridge?</Typography>\r\n\t\t\t\t\t<Typography variant = \"h6\" className = {classes.veganSubTitle}>\r\n\t\t\t\t\t  The best way to reduce food waste and save money? Eat what you’ve already paid for! \r\n\t\t\t\t\t  Just add your ingredients and we will instantly finds matching recipes from the\r\n\t\t\t\t\t\tmost popular cooking websites! Don’t overthink it, we’re going to tell you what to cook.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button variant = \"contained\" className = {classes.veganButton}>Find Me A Recipe</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n\r\n\tgetVeganPanel = () => {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Grid container style = {{height : \"100%\"}}>\r\n\t\t\t\t<Grid item xs = {12} className = {classes.veganGrid}>\r\n\t\t\t\t\t<Typography variant = \"h1\" className = {classes.veganTitle}>Vegan Recipes</Typography>\r\n\t\t\t\t\t<Typography variant = \"h6\" className = {classes.veganSubTitle}>\r\n\t\t\t\t\t\tMany say that nutritious food come at a price but not any more. <b><i>Vegan food</i></b> can provide\r\n\t\t\t\t\t\ta healthy balance of nutrients and can be cost friendly too. So lets veganise your eveyday\r\n\t\t\t\t\t\trecipes\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button variant = \"contained\" className = {classes.veganButton}>Find Vegan Recipes</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Grid container className = {classes.root}>\r\n\r\n\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t<NavBar home = {true}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs = {12} className = {classes.bgGrid}>\r\n\t\t\t\t\t{this.sliderJSX()}\r\n\t\t\t\t\t\t<Grid container className = {classes.autocompleteGrid}>\r\n\t\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\toptions={this.state.autocompleteOptions}\r\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.title}\r\n\t\t\t\t\t\t\t\tonOpen={() => {this.setState({open : true}) }}\r\n\t\t\t\t\t\t\t\tonClose={() => { this.setState({open : false}) }}\r\n\t\t\t\t\t\t\t\tloading = {this.state.loading}\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"45%\" }}\r\n\t\t\t\t\t\t\t\tclassName = {classes.autocomplete}\r\n\t\t\t\t\t\t\t\tfreeSolo\r\n\t\t\t\t\t\t\t\tdisableClearable\r\n\t\t\t\t\t\t\t\tvalue = {this.state.value}//value selected by the user\r\n\t\t\t\t\t\t\t\tonChange = {(e, newValue) => this.autocompleteChangeHandler(e, newValue)}\r\n\t\t\t\t\t\t\t\tinputValue = {this.state.inputValue} //value displayed in textbox\r\n\t\t\t\t\t\t\t\tonInputChange = {(e, newInputValue) => {this.autocompleteInputChangeHandler(e, newInputValue)}}\r\n\t\t\t\t\t\t\t\trenderInput={(params) => \r\n\t\t\t\t\t\t\t\t\t<TextField {...params} variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t InputProps={{...params.InputProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}} />} />\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\t        disableElevation \r\n\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.searchButton} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {this.redirectToSearch(this.state.inputValue, \"\", \"\", \"\")}}>\r\n\t\t\t\t\t\t\t  <SearchIcon className = {classes.searchIcon}/>\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\r\n\t\t\t\t<Grid item xs = {12} className = {classes.scrollBg}>\r\n\t\t\t\t  <Card style = {{margin : \"0px 20px 30px 20px\"}}>\r\n\t\t\t\t\t  {this.state.randomRecipes && this.state.randomRecipes.length > 0 && this.recipeOfTheDay()}\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t{this.horizontalList(mealTypes)}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.fixedBg} style = {{backgroundImage : `url(${background6})`}}>\r\n\t\t\t\t  {this.getWhatsInMyFridgePanel()}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.scrollBg}>\r\n\t\t\t\t  {this.horizontalList(cuisineTypes)}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.fixedBg} style = {{backgroundImage : `url(${background10})`}}>\r\n\t\t\t\t  {this.getVeganPanel()}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.scrollBg}>\r\n\t\t\t\t  {this.horizontalList(dietTypes)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(RecipesHome);","D:\\My Projects\\react-recipe\\client\\src\\Components\\RecipeHeader.js",["124","125"],"import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';import vegIcon from '../Assets/Icons/veg.svg'\r\nimport nonVegIcon from '../Assets/Icons/nonVeg.svg'\r\n\r\nconst style = theme => ({\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tinfoLabelBold : {\r\n\t\tfontSize : \"1.5rem\",\r\n\t\tfontWeight : \"bold\"\r\n\t},\r\n\tinfoLabel : {\r\n\t\tfontSize : \"1.5rem\",\r\n\t},\r\n\tvegIcon : {\r\n\t\theight : \"70px\",\r\n\t\twidth : \"70px\"\r\n\t},\r\n\tgridCenterFlex : {\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n})\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter} style = {{marginBottom : \"30px\"}}>\r\n\t\t\t\t\t<Typography variant = \"h3\">{this.props.details.title}</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter} style = {{\"border-right\" : \"0.1px grey solid\"}}>\r\n\t\t\t\t\t{/*<Tooltip title = {\"Cook Time\"}><img src = {timeIcon} className = {classes.logo}/></Tooltip>*/}\r\n\t\t\t\t\t<Typography variant = \"button\" className = {classes.infoLabelBold}>Cook Time</Typography>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.infoLabel}>\r\n\t\t\t\t\t\t{this.props.details.readyInMinutes}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter} style = {{\"border-right\" : \"0.1px grey solid\"}}>\r\n\t\t\t\t\t<Typography variant = \"button\" className = {classes.infoLabelBold}>Servings</Typography>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.infoLabel}>\r\n\t\t\t\t\t\t{this.props.details.servings}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {4} className = {classes.gridCenter}>\r\n\t\t\t\t\t<Tooltip title = {\"Vegetarian/ Non-vegetarian\"}>\r\n\t\t\t\t\t\t<img src = {this.props.details.vegetarian ? vegIcon : nonVegIcon} \r\n\t\t\t\t\t\t\t\tclassName = {classes.vegIcon}/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenterFlex} style = {{marginTop : \"30px\"}}>\r\n\t\t\t\t\t<Typography variant = \"subtitle1\" style = {{display : \"inline\"}}>\r\n\t\t\t\t\t\t{\"AUTHOR : \"} {this.props.details.creditsText}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs = {12} className = {classes.gridCenterFlex} style = {{marginTop : \"10px\"}}>\r\n\t\t\t\t\t{this.props.details.dishTypes.length > 0 && this.props.details.dishTypes.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.cuisines.length > 0 && this.props.details.cuisines.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.diets.length > 0 && this.props.details.diets.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{this.props.details.occasions.length > 0 && this.props.details.occasions.map(item => (\r\n\t\t\t\t\t\t<Chip label = {item} variant = \"outlined\" />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(NavBar);","D:\\My Projects\\react-recipe\\client\\src\\Components\\LogIn.js",["126","127","128","129"],"import React, {Component, useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {loginAPI} from '../ServiceClass.js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport loginBackground from '../Assets/Images/background/login_background.jpg';\r\nimport { Card, TextField, Grid, Button} from '@material-ui/core';\r\nimport LogoIcon from '../Assets/Icons/LogoColor.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundImage : `url(${loginBackground})`,\r\n\t\theight : \"100vh\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tcard : {\r\n\t\theight : \"70vh\",\r\n\t\twidth : \"400px\",\r\n\t\tborder: \"1px solid #fff\",\r\n\t\tborderRadius: \"15px\",\r\n\t\tboxShadow: \"0 0 1rem 0 rgba(0, 0, 0, 0.2)\",\r\n\t\t// backdropFilter: \"blur(5px) saturate(100%) contrast(45%) brightness(130%)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n\t\t// textAlign : \"center\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\ttextField : {\r\n\t\tmarginBottom : \"30px\",\r\n\t\twidth : \"100%\",\r\n\t\t\"& .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#932432\"\r\n\t\t},\r\n\t\t\"& .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#fff\",\r\n\t\t},\r\n\t\t\"&:hover .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .Mui-focused .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\"\r\n\t\t},\r\n\t\t\"& .Mui-focused\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .MuiOutlinedInput-notchedOutline\" : {\r\n\t\t\tborderColor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#932432\"\r\n    },\r\n\t},\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tbutton : {\r\n\t\tmarginBottom : \"20px\",\r\n\t\twidth : \"100%\",\r\n\t\tcolor : \"#fff\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t},\r\n\tsignupLink : {\r\n\t\tcursor : \"pointer\",\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tsignupText : {\r\n\t\t\"&:hover\" : {\r\n\t\t\ttextDecoration : \"underline\"\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\t// padding : \"0px 20px 0px 0px\",\r\n\t\tmargin : \"0px 0px 20px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\",\r\n\t\tcolor : \"#932432\",\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"42px\", \r\n\t\twidth : \"42px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n})\r\n\r\nconst LogIn = (props) => {\r\n\tlet [email, setEmail] = useState('');\r\n\tlet [password, setPassword] = useState('');\r\n\r\n\tconst redirectToSignup = () => {\r\n\t\tprops.history.push({\r\n\t\t\tpathname: `${props.baseURL}/signup`,\r\n\t\t});\r\n\t}\r\n\r\n\tconst redirectToDashboard = () => {\r\n\t\tconsole.log(email, password)\r\n\t\tloginAPI(email, password)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tif(res && res.success){\r\n\t\t\t\tsessionStorage.setItem('session', JSON.stringify(res.sessionID));\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.cookbooks));\r\n\t\t\t\tsessionStorage.setItem('user', JSON.stringify(res.user));\r\n\t\t\t\tsessionStorage.setItem('recipes', JSON.stringify(res.recipes));\r\n\t\t\t\tprops.history.push({\r\n\t\t\t\t\tpathname: `${props.baseURL}/home`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst emailChangeHandler = (event) => {\r\n\t\tsetEmail(event.target.value)\r\n\t}\r\n\r\n\tconst passwordChangeHandler = (event) => {\r\n\t\tsetPassword(event.target.value)\r\n\t}\r\n\r\n\t\tconst { classes, theme } = props;\r\n\t\treturn(\r\n\t\t\t<div className = {classes.root}>\r\n\t\t\t\t<Card className = {classes.card}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t  <Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h3\" noWrap>\r\n\t\t\t\t\t\t\t\t\tRecipe \t<img src = {LogoIcon} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {emailChangeHandler(e)}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {passwordChangeHandler(e)}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.button} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor = \"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => redirectToDashboard()}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} \r\n\t\t\t\t\t\t      className = {classes.signupLink} \r\n\t\t\t\t\t\t      onClick = {() => {redirectToSignup()}}>\r\n\t\t\t\t\t\t\t<Typography variant=\"caption\" color = \"secondary\" className = {classes.signupText}>\r\n\t\t\t\t\t\t\t\tDon't have an Account? Signup Now!\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(LogIn);","D:\\My Projects\\react-recipe\\client\\src\\Components\\SignUp.js",["130","131"],"import React, {Component, useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {signupAPI} from '../ServiceClass.js';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card, TextField, Grid, Button, InputAdornment, IconButton  } from '@material-ui/core';\r\nimport signupBackground from '../Assets/Images/background/signup_background.jpg';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport LogoIcon from '../Assets/Icons/Logo.svg'\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundImage : `url(${signupBackground})`,\r\n\t\theight : \"100vh\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t\talignItems : \"center\",\r\n\t\t// justifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tcard : {\r\n\t\theight : \"70vh\",\r\n\t\twidth : \"300px\",\r\n\t\tmargin : \"15vw\",\r\n\t\tborder: \"1px solid #fff\",\r\n\t\tborderRadius: \"15px\",\r\n\t\tboxShadow: \"0 0 1rem 0 rgba(0, 0, 0, 0.2)\",\r\n\t\t// backdropFilter: \"blur(5px) saturate(100%) contrast(45%) brightness(130%)\",\r\n\t\tbackdropFilter: \"blur(5px)\",\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n\t\talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\t\r\n\ttextField : {\r\n\t\tmarginBottom : \"30px\",\r\n\t\twidth : \"100%\",\r\n\t\t\"& .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiFormLabel-root\": {\r\n\t\t\tcolor: \"#932432\"\r\n\t\t},\r\n\t\t\"& .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .Mui-focused .MuiInputBase-input\" : {\r\n\t\t\tcolor : \"#932432\"\r\n\t\t},\r\n\t\t\"& .Mui-focused\" : {\r\n\t\t\tcolor : \"#932432\",\r\n\t\t},\r\n\t\t\"& .MuiOutlinedInput-notchedOutline\" : {\r\n\t\t\tborderColor : \"#fff\"\r\n\t\t},\r\n\t\t\"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#932432\"\r\n    },\r\n\t},\r\n\tgridCenter : {\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tbutton : {\r\n\t\tmarginBottom : \"20px\",\r\n\t\twidth : \"100%\",\r\n\t\tcolor : \"#fff\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t},\r\n\tsignupLink : {\r\n\t\tcursor : \"pointer\",\r\n\t\ttextAlign : \"center\"\r\n\t},\r\n\tsignupText : {\r\n\t\t\"&:hover\" : {\r\n\t\t\ttextDecoration : \"underline\"\r\n\t\t}\r\n\t},\r\n\ttitle: {\r\n\t\tmargin : \"0px 0px 20px 0px\",\r\n\t\tfontFamily : \"Oleo Script Swash Caps\",\r\n\t\tcolor : \"#fff\",\r\n\t\tfontSize : \"10rem\"\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"42px\", \r\n\t\twidth : \"42px\", \r\n\t\tverticalAlign : \"sub\"\r\n\t},\r\n\tsubHeading: {\r\n\t\tcolor : \"#fff\",\r\n\t},\r\n\ticonButton : {\r\n\t\tcolor : \"rgba(225, 225, 225, 0.50)\",\r\n\t}\r\n})\r\n\r\nconst SignUp = (props) => {\r\n\tlet [values, setValues] = useState({\r\n\t\tusername : '',\r\n\t\temail : ''\r\n\t})\r\n\tlet [password, setPassword] = useState({\r\n\t\tvalue : '',\r\n\t\tshowPassword : false\r\n\t});\r\n\tlet [confirmPassword, setConfirmPassword] = useState({\r\n\t\tvalue : '',\r\n\t\tshowPassword : false\r\n\t});\r\n\r\n\r\n\tconst redirectToSignup = () => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/login`,\r\n\t\t});\r\n\t}\r\n\r\n\tconst textFieldChangeHandler = (event, id) =>{\r\n\t\tsetValues({ ...values, [id]: event.target.value });\r\n\t}\r\n\r\n\tconst passwordChangeHandler = (event) => {\r\n\t\tsetPassword({...password, value : event.target.value})\r\n\t}\r\n\r\n\tconst handleClickShowPassword = () => {\r\n    setPassword({ ...password, showPassword: !password.showPassword });\r\n  };\r\n\r\n\tconst confirmPasswordChangeHandler = (event) => {\r\n\t\tsetConfirmPassword({...confirmPassword, value : event.target.value})\r\n\t}\r\n\r\n\tconst handleClickShowConfirmPassword = () => {\r\n    setConfirmPassword({ ...confirmPassword, showPassword: !confirmPassword.showPassword });\r\n  };\r\n\r\n\tconst signupUser = () => {\r\n\t\tconsole.log(values.username, values.email, password.value, confirmPassword.value);\r\n\t\tif(password.value === confirmPassword.value){\r\n\t\t\tsignupAPI(values.username, values.email, password.value)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res && res.success){\r\n\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\tpathname: `${props.baseURL}/login`,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}).catch(err => console.log(err))\r\n\t\t}else{\r\n\t\t\tconsole.log(\"Incorrect Password\");\r\n\t\t}\r\n\t}\r\n\r\n\t\tconst { classes } = props;\r\n\t\treturn(\r\n\t\t\t<div className = {classes.root}>\r\n\t\t\t\t<Card className = {classes.card}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"User Name\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {values.username}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {textFieldChangeHandler(e, 'username')}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {textFieldChangeHandler(e, 'email')}}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t type={password.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {password.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {passwordChangeHandler(e)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton classes = {{root : classes.iconButton}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickShowPassword()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => {e.preventDefault()}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{password.showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t\t</Grid>\t\r\n\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t<TextField label=\"Confirm Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t color = \"secondary\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.textField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t type={confirmPassword.showPassword ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t value = {confirmPassword.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(e) => {confirmPasswordChangeHandler(e)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton classes = {{root : classes.iconButton}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickShowConfirmPassword()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(e) => {e.preventDefault()}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{confirmPassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t  </Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.button} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor = \"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {signupUser()}}>\r\n\t\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs = {12} className = {classes.signupLink} onClick = {() => {redirectToSignup()}}>\r\n\t\t\t\t\t\t\t<Typography variant=\"caption\" color = \"secondary\" className = {classes.signupText}>\r\n\t\t\t\t\t\t\t\tAlready have an Account? Login Now!\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid container style = {{width : \"500px\"}}>\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t<Typography className={classes.title} variant=\"h1\" noWrap>\r\n\t\t\t\t\t\t\tRecipe\r\n\t\t\t\t\t  </Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs = {12} className = {classes.gridCenter}>\r\n\t\t\t\t\t\t<Typography className={classes.subHeading} variant=\"h4\">\r\n\t\t\t\t\t\t  Register for a free account to save your favourite recipes to your recipe box!\r\n\t\t\t\t\t  </Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\nexport default withStyles(style, {withTheme: true})(SignUp);","D:\\My Projects\\react-recipe\\client\\src\\Components\\Dashboard.js",["132","133","134","135","136","137","138","139"],"import React, {Component} from 'react';\r\nimport {getBookmarkedRecipesAPI, createCookbookAPI, changeCookbookNameAPI, deleteCookbookAPI} from '../ServiceClass.js';\r\nimport CONFIG from '../Config.js'\r\nimport NavBar from './NavBar.js';\r\nimport RecipeCard from './RecipeCard.js'\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport dashboardBackground from '../Assets/Images/background/dashboard_background.jpg';\r\nimport { Typography, Card, Grid, TextField} from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Cookbook from '../Assets/Icons/Cookbook.svg'\r\nimport CookbookColored from '../Assets/Icons/CookbookColored.svg'\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst style = theme => ({\r\n\troot : {\r\n\t\tbackgroundColor: \"rgba(255, 255, 255, 0.65)\",\r\n\t\tdisplay : \"flex\",\r\n\t\t// backgroundImage : `url(${dashboardBackground})`,\r\n\t\t// height : \"100vh\",\r\n\t\t// backgroundAttachment: \"fixed\",\r\n\t\t// backgroundRepeat: \"no-repeat\",\r\n\t\t// backgroundSize: \"cover\",\r\n\t\t// backgroundPosition: \"top center\",\r\n\t},\r\n\tmainCard : {\r\n\t\theight : \"100%\",\r\n\t\twidth : \"auto\",\r\n\t\tpadding : \"20px\"\r\n\t},\r\n\tcard : {\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tboxShadow : \"none\",\r\n\t\tpadding : \"20px 0px\",\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tnewCard : {\r\n\t\tborderRadius : \"4px\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tpadding : \"20px 10px\",\r\n\t\tcursor : \"pointer\",\r\n\t\tboxShadow : \"none\",\r\n\t\tborder : \"2px solid #000\",\r\n\t\tposition : \"relative\"\r\n\t},\r\n\tgridCenter : {\r\n  \talignItems : \"center\",\r\n\t\tjustifyContent : \"center\",\r\n\t\tdisplay : \"flex\"\r\n\t},\r\n\tlogo : {\r\n\t\theight : \"70px\",\r\n\t\twidth : \"70px\",\r\n\t},\r\n\tcookbookName : {\r\n\t},\r\n\tnoRecipeText : {\r\n\t\ttextAlign : \"center\",\r\n\t\tmarginTop : \"80px\",\r\n\t\twidth : \"100%\"\r\n\t},\r\n\taddCookbookIcon : {\r\n\t\theight: \"35px\",\r\n    width: \"35px\",\r\n    verticalAlign: \"bottom\",\r\n    marginLeft: \"10px\",\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tnameTextField : {\r\n\t\t\"& .MuiInputLabel-marginDense\" : {\r\n\t\t\ttransform: \"translate(0, 7px) scale(1)\",\r\n\t\t},\r\n\t\t\"& .MuiInput-formControl\" : {\r\n\t\t\tmarginTop : \"0px\"\r\n\t\t},\r\n\t\t\"& .MuiInput-underline:after\" : {\r\n\t\t\tborderBottom : \"2px solid #000\"\r\n\t\t},\r\n\t\t\"& .MuiFormLabel-root.Mui-focused\" : {\r\n\t\t\tcolor : \"rgba(0, 0, 0, 0.42)\"\r\n\t\t}\r\n\t},\r\n\tcheckIcon : {\r\n\t\tcursor : \"pointer\"\r\n\t},\r\n\tcancelIcon : {\r\n\t\tcursor : \"pointer\",\r\n\t\tposition : \"absolute\",\r\n\t\ttop : 0,\r\n\t\tright : 0,\r\n\t\tcolor : \"rgba(0, 0, 0, 0.42)\",\r\n\t\tmargin : \"5px\",\r\n\t\t\"& :hover\" : {\r\n\t\t\tcolor : \"#000\"\r\n\t\t}\r\n\t},\r\n\teditIcon : {\r\n\t\tfloat : \"right\",\r\n\t\tcursor : \"pointer\",\r\n\t\tmarginRight : \"20px\"\r\n\t},\r\n\tdeleteIcon : {\r\n\t\tfloat : \"right\",\r\n\t\tcursor : \"pointer\",\r\n\t\tmarginRight : \"20px\"\r\n\t}\r\n})\r\n\r\nclass Dashboard extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tconst cookbooks = sessionStorage.getItem('cookbooks');\r\n\t\tconst cookbookIds = JSON.parse(cookbooks)\r\n\t\tthis.state = {\r\n\t\t\tcookbooks : JSON.parse(cookbooks) || [],\r\n\t\t\tcookbooksData : null,\r\n\t\t\tactiveID : cookbookIds && cookbookIds.length > 0 && cookbookIds[0].cookbook_id || \"\",\r\n\t\t\tisLoaded : false,\r\n\t\t\tnewCookbookFlag : false,\r\n\t\t\tnewName : \"\",\r\n\t\t\teditCookbookNameFlag : false,\r\n\t\t\tcurrentNewName : \"\",\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.getCookBooksData()\r\n\t}\r\n\r\n\tgetCookBooksData = () => {\r\n\t\tlet cookbookIDsArray = [];\r\n\t\tthis.state.cookbooks.map(item =>{ cookbookIDsArray.push(item.cookbook_id) })\r\n\t\tlet cookbookIds = cookbookIDsArray.join()\r\n\t\tgetBookmarkedRecipesAPI(cookbookIds)\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcookbooksData : res\r\n\t\t\t},() => {\r\n\t\t\t\tconsole.log(this.state)\r\n\t\t\t})\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tredirectToRecipeDetails = (id) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: `${this.props.baseURL}/details/${id}`,\r\n\t\t});\r\n\t}\r\n\r\n\tchangeActiveID = (id) => {\r\n\t\tthis.setState({\r\n\t\t\tactiveID : id\r\n\t\t})\r\n\t}\r\n\r\n\taddNewCookbook = () => {\r\n\t\tcreateCookbookAPI(this.state.newName)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tnewCookbookFlag : false,\r\n\t\t\t\t\tnewName : \"\"\r\n\t\t\t\t},() => { this.getCookBooksData()\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\teditCookbookName = () => {\r\n\t\tthis.setState({\r\n\t\t\teditCookbookNameFlag : true\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteCookbook = () => {\r\n\t\tdeleteCookbookAPI(this.state.activeID)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tactiveID : this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.cookbooks[0].cookbook_id || \"\",\r\n\t\t\t\t},() => { this.getCookBooksData()\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tchangeCookbookName = () => {\r\n\t\tchangeCookbookNameAPI(this.state.activeID, this.state.currentNewName)\r\n\t\t.then(res => {\r\n\t\t\tif(res.success){\r\n\t\t\t\tsessionStorage.setItem('cookbooks', JSON.stringify(res.results));\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcookbooks : res.results,\r\n\t\t\t\t\tcurrentNewName : \"\",\r\n\t\t\t\t\teditCookbookNameFlag : false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}).catch(err => {console.log(err)})\r\n\t}\r\n\r\n\tgetCurrentCookbookName = (id) => {\r\n\t\tlet currentCookbook = this.state.cookbooks.find(item => ( item.cookbook_id === id))\r\n\t\treturn currentCookbook.cookbook_name\r\n\t}\r\n\r\n  render(){\r\n\t\tconst { classes } = this.props;\r\n\t\treturn(\r\n\t\t\t\t<Grid container className = {classes.root}>\r\n\r\n\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t<NavBar home = {true}/>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid container style = {{margin : \"84px 40px 0px 40px\"}} >\r\n\t\t\t\t\t\t<Grid item xs = {8} >\r\n\t\t\t\t\t\t\t<Grid container>\r\n\r\n\t\t\t\t\t\t\t  <Grid item xs = {12} style = {{marginBottom : \"20px\"}}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant = \"h6\">\r\n\t\t\t\t\t\t\t\t\t  My Cookbooks \r\n\t\t\t\t\t\t\t\t\t\t<AddIcon className = {classes.addCookbookIcon} \r\n\t\t\t\t\t\t\t\t\t\t         onClick = {() => {this.setState({ newCookbookFlag : true }) }}/>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid container item xs = {12} spacing = {4} style = {{marginBottom : \"20px\"}}>\r\n\t\t\t\t\t\t\t\t\t{this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.cookbooks.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs = {2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className = {classes.card} onClick = {() => {this.changeActiveID(item.cookbook_id)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src = {item.cookbook_id === this.state.activeID ? CookbookColored : Cookbook} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t     className = {classes.logo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant = \"subtitle1\" className = {classes.cookbookName}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.cookbook_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t{this.state.newCookbookFlag &&\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className = {classes.newCard}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src = {Cookbook} className = {classes.logo}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {12}  className = {classes.gridCenter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField label={this.state.newName === \"\" ? \"Add Name\" : \"\"} size = \"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = {classes.nameTextField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(event) => { \tthis.setState({ newName : event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: false }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon className = {classes.checkIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {this.addNewCookbook}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{color : this.state.newName === \"\" ? \"rgba(0, 0, 0, 0.42)\" : \"#000\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon className = {classes.cancelIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t           onClick = {() => { \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t newName : \"\", \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t newCookbookFlag : false}) \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t\t\t<Card className = {classes.mainCard}>\r\n\t\t\t\t\t\t\t\t\t  <Grid container item xs = {12} spacing = {4}>\r\n\t\t\t\t\t\t\t\t\t\t\t{<Grid item xs = {12}>\r\n\t\t\t\t\t\t\t\t\t\t\t    {this.state.editCookbookNameFlag === false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? <Typography variant = \"h6\" style = {{display : \"inline\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.cookbooks && this.state.cookbooks.length > 0 && this.state.activeID && \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.getCurrentCookbookName(this.state.activeID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: <TextField label={this.state.currentNewName === \"\" ? \"Add Name\" : \"\"} size = \"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className = {classes.nameTextField}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t onChange = {(event) => { \tthis.setState({ currentNewName : event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t InputLabelProps={{ shrink: false }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  InputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  endAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <CheckIcon className = {classes.checkIcon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   onClick = {this.changeCookbookName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   style = {{color : this.state.currentNewName === \"\" ? \"rgba(0, 0, 0, 0.42)\" : \"#000\"}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon className = {classes.editIcon} onClick = {() => this.editCookbookName()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon className = {classes.deleteIcon} onClick = {() => this.deleteCookbook()}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.cookbooksData && this.state.cookbooksData[this.state.activeID].length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? this.state.cookbooksData[this.state.activeID].map(item => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs = {3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RecipeCard id = {item.recipe_id} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage = {CONFIG.IMAGE_URL_RECIPE + item.recipe_id + \"-312x231.\" + item.image_type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle = {item.recipe_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tredirectToRecipeDetails = {this.redirectToRecipeDetails}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallApi = {this.getCookBooksData}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxSize = \"120px\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <Typography variant = \"subtitle2\" className = {classes.noRecipeText}>No Recipes Saved In This Cookbook</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs = {4}>\r\n\t\t\t\t\t\t\tUSER PREFERENCES\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }}\r\n\t\t\t\t\t\t\t\t\t\topen={this.state.openSuccessSnackbar} autoHideDuration={5000}\r\n\t\t\t\t\t\t\t\t\t\tonClose={() => {\tthis.setState({openSuccessSnackbar : false}) }}>\r\n\t\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#4caf50', color : \"#fff\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t message = {this.state.successMessage}/>\r\n\t\t\t\t\t</Snackbar>\r\n\r\n\t\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center',}}\r\n\t\t\t\t\t\t\t\t\t\topen={this.state.openErrorSnackbar} autoHideDuration={3000} \r\n\t\t\t\t\t\t\t\t\t\tonClose={() => { \tthis.setState({openErrorSnackbar : false}) }}>\r\n\t\t\t\t\t\t<SnackbarContent style={{ backgroundColor:'#f44336', color : \"#fff\"}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t message={this.state.errorMessage}/>\r\n\t\t\t\t\t</Snackbar>\r\n\r\n\t\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(Dashboard);","D:\\My Projects\\react-recipe\\client\\src\\Components\\theme.js",[],["140","141"],"D:\\My Projects\\react-recipe\\client\\src\\Components\\DrawerJSX.js",["142","143"],"import React, {Component, useState} from 'react';\r\nimport {cuisineList, dietList, intoleranceList, mealTypeList} from '../ServiceClass.js'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, Typography, List, ListItem, ListItemText, ListItemIcon, Collapse, Divider, Checkbox } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst style = theme => ({\r\n\ttext : {\r\n\t\tfontSize : \"17px\",\r\n\t\t// color : \"#fff\"\r\n\t},\r\n\ttextSmall : {\r\n\t\tfontSize : \"14px\",\r\n\t\ttextTransform : \"capitalize\",\r\n\t\t// color : \"#fff\"\r\n\t},\r\n\tdivider : {\r\n\t\t// backgroundColor : \"#fff\"\r\n\t},\r\n\ticon : {\r\n\t\t// fill : \"#fff\",\r\n\t},\r\n\tlist : {\r\n\t\tpadding : \"0px\"\r\n\t},\r\n\tlistItemRoot : {\r\n\t\tpaddingTop : \"2px\",\r\n\t\tpaddingBottom : \"2px\"\r\n\t},\r\n\tlistItemIcon : {\r\n\t\tminWidth : \"40px\"\r\n\t},\r\n\tcheckBox : {\r\n\t\tpadding : \"4px\",\r\n\t\t// color : \"#fff\"\r\n\t},\r\n\tbutton : {\r\n\t\tmarginTop : \"20px\",\r\n\t\tmarginBottom : \"114px\",\r\n\t\tmarginRight : \"5px\",\r\n\t\twidth : \"-webkit-fill-available\",\r\n\t\t// color : \"#fff\",\r\n\t\tborder: \"1px solid #932432\",\r\n\t}\r\n\r\n})\r\n\r\nconst DrawerJSX = (props) => {\r\n\tconst [cuisine, setCuisine] = useState(false)\r\n\tconst [diet, setDiet] = useState(false)\r\n\tconst [intolerance, setIntolerance] = useState(false)\r\n\tconst [mealType, setMealType] = useState(false)\r\n\r\n\tconst [selectedCuisine, setSelectedCuisine] = useState(props.selectedCuisine)\r\n\tconst [selectedDiet, setSelectedDiet] = useState(props.selectedDiet)\r\n\tconst [selectedIntolerance, setSelectedIntolerance] = useState(props.selectedTolerance)\r\n\tconst [selectedMealType, setSelectedMealType] = useState(props.selectedMealType)\r\n\r\n\tconst cuisineCollapseHandler = () =>{\r\n\t\tsetCuisine(current => !current)\r\n\t\tsetDiet(false)\r\n\t\tsetIntolerance(false)\r\n\t\tsetMealType(false)\r\n\t}\r\n\r\n\tconst dietCollapseHandler = () =>{\r\n\t\tsetDiet(current => !current)\r\n\t\tsetCuisine(false)\r\n\t\tsetIntolerance(false)\r\n\t\tsetMealType(false)\r\n\t}\r\n\r\n\tconst intoleranceCollapseHandler = () =>{\r\n\t\tsetIntolerance(current => !current)\r\n\t\tsetDiet(false)\r\n\t\tsetCuisine(false)\r\n\t\tsetMealType(false)\r\n\t}\r\n\r\n\tconst mealCollapseHandler = () =>{\r\n\t\tsetMealType(current => !current)\r\n\t\tsetDiet(false)\r\n\t\tsetIntolerance(false)\r\n\t\tsetCuisine(false)\r\n\t}\r\n\r\n\tconst cuisineSelectHandler = (selectedIndex) => {\r\n\t\tconst values = selectedCuisine.some( item => item === cuisineList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t ? selectedCuisine.filter( item => item !== cuisineList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t : selectedCuisine.concat([cuisineList[selectedIndex]]);\t\r\n\t\tsetSelectedCuisine(values)\r\n\t}\r\n\r\n\tconst dietSelectHandler = (selectedIndex) => {\r\n\t\tconst values = selectedDiet.some( item => item === dietList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t ? selectedDiet.filter( item => item !== dietList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t : selectedDiet.concat([dietList[selectedIndex]]);\t\r\n\t\tsetSelectedDiet(values)\r\n\t}\r\n\r\n\tconst intoleranceSelectHandler = (selectedIndex) => {\r\n\t\tconst values = selectedIntolerance.some( item => item === intoleranceList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t ? selectedIntolerance.filter( item => item !== intoleranceList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t : selectedIntolerance.concat([intoleranceList[selectedIndex]]);\t\r\n\t\tsetSelectedIntolerance(values)\r\n\t}\r\n\r\n\tconst mealTypeSelectHandler = (selectedIndex) => {\r\n\t\tconst values = selectedMealType.some( item => item === mealTypeList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t ? selectedMealType.filter( item => item !== mealTypeList[selectedIndex])\r\n\t\t\t\t\t\t\t\t\t : selectedMealType.concat([mealTypeList[selectedIndex]]);\t\r\n\t\tsetSelectedMealType(values)\r\n\t}\r\n\r\n\tconst applyFilters = () => {\r\n\t\treturn ({\r\n\t\t\tselectedCuisine,\r\n\t\t\tselectedDiet,\r\n\t\t\tselectedIntolerance,\r\n\t\t\tselectedMealType,\r\n\t\t})\r\n\t}\r\n\r\n\tconst { classes } = props;\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\r\n\t\t\t{props.selectedCuisine.length > 0 && props.selectedCuisine.map(item => (\r\n\t\t\t\titem !== \"\" && <Chip label = {item} variant = \"outlined\" />\r\n\t\t\t))}\r\n\t\t\t{props.selectedDiet.length > 0 && props.selectedDiet.map(item => (\r\n\t\t\t\titem !== \"\" && <Chip label = {item} variant = \"outlined\" />\r\n\t\t\t))}\r\n\t\t\t{props.selectedTolerance.length > 0 && props.selectedTolerance.map(item => (\r\n\t\t\t\titem !== \"\" && <Chip label = {item} variant = \"outlined\" />\r\n\t\t\t))}\r\n\t\t\t{props.selectedMealType.length > 0 && props.selectedMealType.map(item => (\r\n\t\t\t\titem !== \"\" && <Chip label = {item} variant = \"outlined\" />\r\n\t\t\t))}\r\n\r\n\t\t\t<List className = {classes.list}>\r\n\t\t\t\t<ListItem button onClick = {() => cuisineCollapseHandler()}>\r\n\t\t\t\t\t<ListItemText primary=\"Cuisine\" classes = {{primary : classes.text}}/>\r\n\t\t\t\t\t{cuisine ? <ExpandLess className = {classes.icon}/> : <ExpandMore className = {classes.icon}/>}\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Collapse in={cuisine} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t{cuisineList.map((item,index) => (\r\n\t\t\t\t\t\t\t<ListItem button className={classes.nested} \r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses = {{root : classes.listItemRoot}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {cuisineSelectHandler(index)}}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className = {classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={selectedCuisine.some( i => i === item)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tclassName = {classes.checkBox}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Typography variant = \"subtitle2\" className = {classes.textSmall}>{item}</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</List>\r\n\r\n\t\t\t<Divider width = \"100%\" className = {classes.divider}/>\r\n\r\n\t\t\t<List className = {classes.list}>\r\n\t\t\t\t<ListItem button onClick = {() => dietCollapseHandler()}>\r\n\t\t\t\t\t<ListItemText primary=\"Diet\" classes = {{primary : classes.text}}/>\r\n\t\t\t\t\t{diet ? <ExpandLess className = {classes.icon}/> : <ExpandMore className = {classes.icon}/>}\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Collapse in={diet} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t{dietList.map((item, index) => (\r\n\t\t\t\t\t\t\t<ListItem button className={classes.nested} \r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses = {{root : classes.listItemRoot}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {dietSelectHandler(index)}}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className = {classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={selectedDiet.some( i => i === item)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tclassName = {classes.checkBox}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t  <Typography variant = \"subtitle2\" className = {classes.textSmall}>{item}</Typography>\r\n\t\t\t\t\t\t  </ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</List>\r\n\r\n\t\t\t<Divider width = \"100%\" className = {classes.divider}/>\r\n\r\n\t\t\t<List className = {classes.list}>\r\n\t\t\t\t<ListItem button onClick = {() => intoleranceCollapseHandler()}>\r\n\t\t\t\t\t<ListItemText primary=\"Intolerance\" classes = {{primary : classes.text}}/>\r\n\t\t\t\t  {intolerance ? <ExpandLess className = {classes.icon}/> : <ExpandMore className = {classes.icon}/>}\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Collapse in={intolerance} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t{intoleranceList.map((item, index) => (\r\n\t\t\t\t\t\t\t<ListItem button className={classes.nested} \r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses = {{root : classes.listItemRoot}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {intoleranceSelectHandler(index)}}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className = {classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={selectedIntolerance.some( i => i === item)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tclassName = {classes.checkBox}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Typography variant = \"subtitle2\" className = {classes.textSmall}>{item}</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</List>\r\n\r\n\t\t\t<Divider width = \"100%\" className = {classes.divider}/>\r\n\r\n\t\t\t<List className = {classes.list} >\r\n\t\t\t\t<ListItem button onClick = {() => mealCollapseHandler()}>\r\n\t\t\t\t\t<ListItemText primary=\"Meal Type\" classes = {{primary : classes.text}}/>\r\n\t\t\t\t  {mealType ? <ExpandLess className = {classes.icon}/> : <ExpandMore className = {classes.icon}/>}\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Collapse in={mealType} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t{mealTypeList.map((item, index) => (\r\n\t\t\t\t\t\t\t<ListItem button className={classes.nested} \r\n\t\t\t\t\t\t\t\t\t\t\t\tclasses = {{root : classes.listItemRoot}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {mealTypeSelectHandler(index)}}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon className = {classes.listItemIcon}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={selectedMealType.some( i => i === item)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tclassName = {classes.checkBox}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Typography variant = \"subtitle2\" className = {classes.textSmall}>{item}</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</List>\r\n\r\n\t\t\t<Divider width = \"100%\" className = {classes.divider}/>\r\n\r\n\t\t\t<Button variant=\"contained\" \r\n\t\t\t\t\t\t\tclassName = {classes.button} \r\n\t\t\t\t\t\t\tcolor = \"secondary\"\r\n\t\t\t\t\t\t\tonClick = {() => {props.applyFilter(applyFilters())}}>\r\n\t\t\t\tApply\r\n\t\t\t</Button>\r\n\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default withStyles(style, {withTheme: true})(DrawerJSX);",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":32,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"148","severity":1,"message":"152","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"153","line":14,"column":7,"nodeType":"150","messageId":"151","endLine":14,"endColumn":13},{"ruleId":"148","severity":1,"message":"154","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"155","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":18},{"ruleId":"148","severity":1,"message":"156","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":116,"column":2,"nodeType":"159","messageId":"160","endLine":116,"endColumn":12},{"ruleId":"161","severity":1,"message":"162","line":232,"column":7,"nodeType":"163","endLine":233,"endColumn":43},{"ruleId":"164","severity":1,"message":"165","line":266,"column":49,"nodeType":"166","messageId":"160","endLine":266,"endColumn":51},{"ruleId":"164","severity":1,"message":"165","line":271,"column":49,"nodeType":"166","messageId":"160","endLine":271,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":301,"column":7,"nodeType":"163","endLine":304,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":351,"column":9,"nodeType":"163","endLine":354,"endColumn":50},{"ruleId":"161","severity":1,"message":"162","line":434,"column":6,"nodeType":"163","endLine":434,"endColumn":79},{"ruleId":"161","severity":1,"message":"162","line":121,"column":17,"nodeType":"163","endLine":121,"endColumn":67},{"ruleId":"148","severity":1,"message":"167","line":5,"column":5,"nodeType":"150","messageId":"151","endLine":5,"endColumn":7},{"ruleId":"168","severity":1,"message":"169","line":32,"column":1,"nodeType":"170","endLine":56,"endColumn":3},{"ruleId":"171","severity":1,"message":"172","line":117,"column":62,"nodeType":"173","messageId":"174","endLine":117,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":117,"column":97,"nodeType":"173","messageId":"174","endLine":117,"endColumn":99},{"ruleId":"175","severity":1,"message":"176","line":137,"column":26,"nodeType":"177","messageId":"178","endLine":137,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":274,"column":9,"nodeType":"163","endLine":275,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":308,"column":6,"nodeType":"163","endLine":308,"endColumn":63},{"ruleId":"148","severity":1,"message":"179","line":14,"column":24,"nodeType":"150","messageId":"151","endLine":14,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":15,"column":28,"nodeType":"177","messageId":"178","endLine":15,"endColumn":30},{"ruleId":"148","severity":1,"message":"180","line":51,"column":11,"nodeType":"150","messageId":"151","endLine":51,"endColumn":18},{"ruleId":"157","severity":1,"message":"181","line":70,"column":7,"nodeType":"159","messageId":"160","endLine":70,"endColumn":19},{"ruleId":"148","severity":1,"message":"154","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"182","line":39,"column":8,"nodeType":"150","messageId":"151","endLine":39,"endColumn":13},{"ruleId":"148","severity":1,"message":"183","line":44,"column":8,"nodeType":"150","messageId":"151","endLine":44,"endColumn":18},{"ruleId":"148","severity":1,"message":"184","line":75,"column":7,"nodeType":"150","messageId":"151","endLine":75,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":436,"column":6,"nodeType":"163","endLine":436,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":443,"column":6,"nodeType":"163","endLine":443,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":450,"column":6,"nodeType":"163","endLine":450,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":457,"column":6,"nodeType":"163","endLine":457,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":464,"column":6,"nodeType":"163","endLine":464,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":471,"column":6,"nodeType":"163","endLine":471,"endColumn":64},{"ruleId":"161","severity":1,"message":"162","line":478,"column":6,"nodeType":"163","endLine":478,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":485,"column":6,"nodeType":"163","endLine":485,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":492,"column":6,"nodeType":"163","endLine":492,"endColumn":63},{"ruleId":"161","severity":1,"message":"162","line":511,"column":9,"nodeType":"163","endLine":511,"endColumn":91},{"ruleId":"161","severity":1,"message":"162","line":534,"column":9,"nodeType":"163","endLine":534,"endColumn":91},{"ruleId":"161","severity":1,"message":"162","line":541,"column":9,"nodeType":"163","endLine":541,"endColumn":91},{"ruleId":"161","severity":1,"message":"162","line":564,"column":9,"nodeType":"163","endLine":564,"endColumn":91},{"ruleId":"148","severity":1,"message":"185","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":64,"column":7,"nodeType":"163","endLine":65,"endColumn":40},{"ruleId":"148","severity":1,"message":"186","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"182","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"187","line":132,"column":20,"nodeType":"150","messageId":"151","endLine":132,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":139,"column":18,"nodeType":"163","endLine":139,"endColumn":68},{"ruleId":"148","severity":1,"message":"186","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"188","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":16},{"ruleId":"148","severity":1,"message":"189","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":124,"column":53,"nodeType":"173","messageId":"174","endLine":124,"endColumn":55},{"ruleId":"171","severity":1,"message":"172","line":124,"column":83,"nodeType":"173","messageId":"174","endLine":124,"endColumn":85},{"ruleId":"175","severity":1,"message":"176","line":139,"column":33,"nodeType":"177","messageId":"178","endLine":139,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":191,"column":73,"nodeType":"173","messageId":"174","endLine":191,"endColumn":75},{"ruleId":"171","severity":1,"message":"172","line":191,"column":112,"nodeType":"173","messageId":"174","endLine":191,"endColumn":114},{"ruleId":"161","severity":1,"message":"162","line":242,"column":14,"nodeType":"163","endLine":243,"endColumn":47},{"ruleId":"161","severity":1,"message":"162","line":258,"column":14,"nodeType":"163","endLine":258,"endColumn":64},{"ruleId":"144","replacedBy":"190"},{"ruleId":"146","replacedBy":"191"},{"ruleId":"148","severity":1,"message":"186","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"192","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":12},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CONFIG' is defined but never used.","'sample' is assigned a value but never used.","'RecipeHeader' is defined but never used.","'LaunchIcon' is defined but never used.","'veganIcon' is defined but never used.","no-dupe-keys","Duplicate key 'gridCenter'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'id' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'amounts' is assigned a value but never used.","'classes' is assigned a value but never used.","Duplicate key 'animateScale'.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'backgroundArray' is assigned a value but never used.","'CheckBox' is defined but never used.","'Component' is defined but never used.","'theme' is assigned a value but never used.","'LogoIcon' is defined but never used.","'dashboardBackground' is defined but never used.",["193"],["194"],"'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]